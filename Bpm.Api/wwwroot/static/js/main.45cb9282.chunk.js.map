{"version":3,"sources":["app/config/theme.ts","app/config/i18n.ts","app/models/common.ts","app/stores/commonStore.ts","app/api/agent.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/ncaLayerStore.ts","app/stores/loanAppListStore.ts","app/stores/loanAppDetailsStore.ts","app/stores/rootStore.ts","app/models/loanApplication.ts","app/layout/PrivateRoute.tsx","app/layout/Sidebar.tsx","app/common/dialogs/UniversalDialog.tsx","app/validators/loginValidationScheme.ts","features/user/LoginForm.tsx","app/layout/Topbar.tsx","app/layout/Overlay.tsx","app/layout/Spinner.tsx","app/layout/NotFound.tsx","features/tasks/list/TaskListToolbar.tsx","features/tasks/list/TaskListPagination.tsx","features/tasks/list/TaskListNavigation.tsx","features/tasks/list/TaskList.tsx","app/validators/profileValidationScheme.ts","app/validators/passwordValidationScheme.ts","features/user/ChangePassword.tsx","features/user/Profile.tsx","features/tasks/details/TaskDetailsToolbar.tsx","app/common/tabs/TabPanel.tsx","app/common/tables/UniversalTable.tsx","features/tasks/details/tap-panel/ClientDetails.tsx","features/tasks/details/tap-panel/Assets.tsx","features/tasks/details/tap-panel/Contracts.tsx","features/tasks/details/tap-panel/Documents.tsx","features/tasks/details/tap-panel/FinAnalysis.tsx","features/tasks/details/TaskDetailsInfo.tsx","app/common/forms/comfirm-form/ConfirmForm.tsx","app/common/inputs/FileInput.tsx","app/common/forms/decline-form/DeclineForm.tsx","app/common/forms/user-report-form/UserReportFormActions.tsx","app/common/forms/user-report-form/comments/CommentsForm.tsx","app/common/forms/user-report-form/comments/CommentsList.tsx","app/common/forms/user-report-form/UserReportFormComments.tsx","app/common/forms/user-report-form/UserReportForm.tsx","features/tasks/details/tap-panel/ExpertiseResults.tsx","features/tasks/details/TaskDetailsForm.tsx","features/tasks/details/TaskDetails.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["darkTheme","palette","type","shape","borderRadius","typography","fontFamily","htmlFontSize","breakpoints","values","xs","sm","md","lg","xl","lightTheme","i18n","use","languageDetector","initReactI18next","init","lng","fallbackLng","ns","defaultNS","fallbackNS","nonExplicitWhitelist","debug","process","resources","kk","common","commonKk","ru","commonRu","en","commonEn","Lang","Theme","Status","EntityTypes","CommonStore","rootStore","this","reaction","access_token","token","window","localStorage","removeItem","setItem","refresh_token","observable","getItem","light","action","appLoaded","lang","changeLanguage","locale","enUS","theme","state","overlayOpen","sideBarOpen","axios","defaults","baseURL","interceptors","request","cfg","headers","Authorization","error","Promise","reject","createAuthRefreshInterceptor","failedRequest","post","then","tokenRefreshResponse","data","succeed","accessToken","refreshToken","response","config","resolve","undefined","message","toLowerCase","toast","status","isResponse","responseBody","requests","url","get","body","put","delete","login","user","register","refresh","upload","formData","remove","fileId","list","form","params","add","commentId","getList","getNavigationItems","getDetails","id","getDocuments","completeTask","getExpertiseResults","update","changePassword","UserStore","computed","a","pending","agent","result","runInAction","loginModalOpen","commonStore","setTokens","history","push","logout","setSidebarOpenState","decoded","jwt_decode","displayName","lastName","firstName","middleName","trim","ProfileStore","loading","profile","FormData","append","firstname","lastname","middlename","birthDate","getDate","getMonth","getFullYear","email","phone","image","success","NcaLayerStore","module","storageName","keyTypeValue","tbsElementXPath","signatureParentElementXPath","webSocket","WebSocket","onopen","event","isConnectionOpen","onclose","wasClean","warn","onerror","console","onmessage","log","JSON","parse","close","openConnection","method","args","send","stringify","xml","LoanApplicationListStore","page","getLoanApplications","pageLimit","order","navigationParams","loanStatus","userRole","_","newPage","parseInt","target","value","property","isAsc","orderBy","search","statusId","roleId","count","loanApplications","navigationPending","navigationItems","LoadApplicationDetailsStore","formId","key","userReportFormValues","fields","loanApplicationTaskId","loanApplicationTaskStatusId","detailsAreLoading","loanApplication","forms","forEach","field","setUserReportFormCheckboxValue","isChecked","expertiseResultsLoading","expertiseResults","completeTaskLoading","taskStatusId","comment","files","Array","from","file","idx","Object","entries","toString","setLoanApplicationTaskStatusId","uploadingFiles","application","loanApplicationId","LoanApplication","finally","entityId","entityType","documents","queryParams","roleControlsFieldId","configure","enforceActions","VerificationStatus","TaskStatus","RootStoreContext","createContext","userStore","profileStore","ncaLayerStore","loanApplicationListStore","loadApplicationDetailsStore","PrivateRoute","Component","component","rest","isLoggedIn","useContext","render","props","to","useStyles","makeStyles","root","width","margin","spacing","listItem","listItemActive","backgroundColor","primary","main","color","white","listItemIconActive","divider","observer","classes","location","useLocation","t","useTranslation","menuItems","text","icon","Drawer","open","onClose","className","List","map","item","Link","RouterLink","underline","ListItem","clsx","pathname","button","onClick","ListItemIcon","ListItemText","Divider","position","UniversalDialog","title","content","fullScreen","Dialog","scroll","maxWidth","aria-labelledby","DialogTitle","DialogContent","yup","length","required","password","display","flexFlow","justifyContent","alignItems","marginBottom","input","alert","helperText","useState","setError","useForm","resolver","yupResolver","loginValidationScheme","reValidateMode","mode","handleSubmit","control","errors","onSubmit","Message","name","defaultValue","onChange","onBlur","mask","inputProps","TextField","label","FormHelperTextProps","fullWidth","Alert","severity","Button","variant","disabled","createStyles","flexGrow","menuButton","marginRight","langButton","setLanguage","setLoginModalOpenState","React","anchorEl","setAnchorEl","handleLangMenuSelect","AppBar","Toolbar","IconButton","edge","aria-label","Typography","currentTarget","Menu","keepMounted","Boolean","MenuItem","zIndex","drawer","setOverlayOpenState","Backdrop","height","minWidth","minHeight","left","top","Spinner","CircularProgress","statusCode","fontSize","fontWeight","NotFound","fade","marginLeft","up","searchIcon","right","inputRoot","inputInput","padding","transition","transitions","create","handleSearchChange","preventDefault","InputBase","placeholder","handlePageChange","handlePageLimitChange","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","onChangeRowsPerPage","labelRowsPerPage","nextIconButtonText","backIconButtonText","labelDisplayedRows","replace","down","marginTop","subheader","h6","lineHeight","cursor","boxShadow","shadows","listItemText","listItemActiveText","valueActive","secondary","selectNavigationItem","useEffect","Paper","ListSubheader","items","index","selected","ListItemSecondaryAction","containerGrid","tableRow","headCells","labelCode","numeric","useHistory","handleOrderingChange","Grid","container","TableContainer","Table","TableHead","TableRow","TableCell","headCell","align","sortDirection","TableSortLabel","active","direction","TableBody","registerNumber","iin","fullname","loanProduct","loanType","max","nullable","transform","curr","orig","min","Date","oldPassword","newPassword","confirmedNewPassword","submitButton","ChangePassword","callback","passwordValidationScheme","size","keys","leftSide","flex","rightSide","formGroup","border","addButtonImage","bottom","dark","addButtonIcon","changePasswordButton","loadProfile","updateProfile","modalOpen","setModalOpen","imageSrc","setImageSrc","defaultValues","profileValidationScheme","setValue","watch","ex","imageValue","Tooltip","TransitionComponent","Zoom","utils","DateFnsUtils","src","URL","createObjectURL","alt","htmlFor","accept","e","hidden","disableToolbar","inputVariant","format","KeyboardButtonProps","backBtn","TaskDetailsToolbar","createdDate","goBack","TabPanel","children","other","role","Box","p","cell","background","UniversalTable","header","isOrderBy","orderByDirection","code","head","fieldTitle","table","pkb","ClientDetails","organizations","creditHistory","clientDetails","renderTitle","renderLine","isEmpty","renderPerson","person","fullName","country","identifier","identificationDocument","number","issuer","dateIssue","address","work","mobile","home","birthPlace","education","workExperience","total","agriculture","marriageStatus","spouse","organization","fact","fax","oked","join","organizationType","ownershipForm","parent","registrationDocument","beneficiary","representative","contacts","contact","i","bankAccounts","bankAccount","bic","booker","affiliatedOrganizations","org","bank_accounts","ba","share_in_company","shareInCapital","debts","d","debt","pkbFile","href","download","filename","Assets","land","bio","flora","tech","Contracts","calculators","techniques","uploadDocuments","removeDocument","dense","multiple","resultsList","green","FinAnalysis","dateOfInspection","overallStatus","results","blockName","subjects","subject","statusName","Correct","Critical","Minor","ServiceUnavailable","renderIcon","a11yProps","paper","tabs","tabPanel","overflowY","Tabs","newValue","indicatorColor","textColor","scrollButtons","flexContainer","centered","Tab","assets","contracts","finAnalysis","actions","float","btn","ConfirmForm","onReject","onAccept","acceptButtonDisabled","autoFocus","FileInput","setFiles","Math","random","submitBtn","DeclineForm","handleFormSubmit","isDecline","isSubmitting","formState","rows","multiline","buttons","modalsStates","reduce","prev","current","isButtonDisabled","isApply","checkboxValues","every","x","hasForm","dialogTitle","dialogMessage","renderDialog","commentInputWrapper","filesInputWrapper","commentInput","fetchComments","addComment","reset","watchComment","Fade","in","commentsListWrapper","date","paddingLeft","linearProgress","comments","commentsLoading","setComments","setCommentsCount","isReadOnly","removeComment","deleteDialogOpen","setDeleteDialogOpen","isDeleting","setIsDeleting","selectedCommentId","setSelectedCommentId","onRemove","filter","LinearProgress","author","disablePadding","commentsCount","textDecoration","getComments","setPage","setCommentsLoading","countOfComments","useCallback","isNew","commentsResult","formControl","formLabel","formGroupItem","formControlLabel","settings","FormControl","FormLabel","subtitle","FormGroup","FormControlLabel","Checkbox","checked","val","labelPlacement","roleName","appBar","renderTabs","renderForms","useParams","setLoanApplicationTaskId","getLoanApplicationDetails","app","outline","setAppLoaded","fillDisplayNameFromToken","currentTime","now","exp","createMuiTheme","MyTheme","CssBaseline","path","Sidebar","exact","Profile","TaskList","TaskDetails","hostname","match","withRouter","scrollTo","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.45cb9282.chunk.js","sourcesContent":["import { ThemeOptions } from '@material-ui/core/styles';\r\n\r\nexport const darkTheme: ThemeOptions = {\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n  shape: {\r\n    borderRadius: 4,\r\n  },\r\n  typography: {\r\n    fontFamily: 'Open sans',\r\n    htmlFontSize: 10,\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1367,\r\n      xl: 1920,\r\n    },\r\n  },\r\n};\r\n\r\nexport const lightTheme: ThemeOptions = {\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n  shape: {\r\n    borderRadius: 4,\r\n  },\r\n  typography: {\r\n    fontFamily: 'Open sans',\r\n    htmlFontSize: 10,\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1367,\r\n      xl: 1920,\r\n    },\r\n  },\r\n};\r\n","import i18n from 'i18next';\r\nimport languageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Resources\r\nimport commonKk from '../../locales/kk/common.json';\r\nimport commonRu from '../../locales/ru/common.json';\r\nimport commonEn from '../../locales/en/common.json';\r\n\r\ni18n\r\n  .use(languageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng: 'ru',\r\n    fallbackLng: 'ru',\r\n    ns: ['common'],\r\n    defaultNS: 'common',\r\n    fallbackNS: 'common',\r\n    nonExplicitWhitelist: true,\r\n    debug: process.env.NODE_ENV === 'development',\r\n    resources: {\r\n      kk: {\r\n        common: commonKk\r\n      },\r\n      ru: {\r\n        common: commonRu\r\n      },\r\n      en: {\r\n        common: commonEn\r\n      }\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import { Dictionary } from \"lodash\";\r\n\r\nexport enum Lang {\r\n  kk = 'kk',\r\n  ru = 'ru',\r\n  en = 'en',\r\n}\r\n\r\nexport enum Theme {\r\n  dark = 'dark',\r\n  light = 'light',\r\n}\r\n\r\nexport interface IName {\r\n  kk: string;\r\n  ru: string;\r\n  en: string;\r\n}\r\n\r\nexport enum Status {\r\n  positive = 'positive',\r\n  negative = 'negative',\r\n  stable = 'stable',\r\n}\r\n\r\nexport interface ICoordinate {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nexport interface INamedFile {\r\n  name: IName;\r\n  url: string;\r\n}\r\n\r\nexport interface IResponse<T> {\r\n  data: T,\r\n  message: string | null,\r\n  succeed: boolean,\r\n  errors: Dictionary<string[]>\r\n}\r\n\r\nexport type OrderDirection = 'asc' | 'desc';\r\n\r\nexport interface ITableData {\r\n  header: ITableHeader[],\r\n  body: Dictionary<any>[]\r\n}\r\n\r\nexport interface ITableHeader {\r\n  code: string;\r\n  name: string;\r\n  isOrderBy: boolean;\r\n  orderByDirection: OrderDirection;\r\n}\r\n\r\nexport interface IFileListItem {\r\n  id: string;\r\n  filename: string;\r\n  url: string;\r\n}\r\n\r\nexport enum EntityTypes {\r\n  LoanApplication = 1,\r\n  LoanApplicationTask = 2,\r\n  PBK = 3,\r\n  Comment = 4\r\n}\r\n\r\nexport interface IEntityBase {\r\n  entityId: string;\r\n  entityType: EntityTypes;\r\n}\r\n\r\nexport interface IPagingBase {\r\n  page: number;\r\n  pageLimit: number;\r\n}\r\n\r\nexport interface ICommentListItem {\r\n  commentId: string;\r\n  date: string;\r\n  author: string;\r\n  text: string;\r\n  files: IFileListItem[];\r\n}\r\n\r\nexport interface IUploadFilesFormValues extends IEntityBase {\r\n  files: Blob[];\r\n}\r\n\r\nexport interface IListFilesFormValues extends IEntityBase {\r\n}\r\n\r\nexport interface IListCommentsFormValues extends IPagingBase {\r\n  roleControlsFieldId: string;\r\n  loanApplicationTaskId: string;\r\n}","import { RootStore } from './rootStore';\r\nimport { reaction, observable, action } from 'mobx';\r\nimport { ru, enUS, kk } from 'date-fns/locale';\r\nimport i18n from '../config/i18n';\r\nimport { Lang, Theme } from '../models/common';\r\n\r\nexport default class CommonStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.access_token,\r\n      (token) => {\r\n        if (token == null) window.localStorage.removeItem('jwt_access');\r\n        else window.localStorage.setItem('jwt_access', token);\r\n      }\r\n    );\r\n\r\n    reaction(\r\n      () => this.refresh_token,\r\n      (token) => {\r\n        if (token == null) window.localStorage.removeItem('jwt_refresh');\r\n        else window.localStorage.setItem('jwt_refresh', token);\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable access_token: string | null = window.localStorage.getItem('jwt_access');\r\n  @observable refresh_token: string | null = window.localStorage.getItem('jwt_refresh');\r\n  @observable appLoaded = false;\r\n  @observable lang: Lang = Lang.ru; // i18n.language\r\n  @observable locale: Locale = ru;\r\n  @observable theme: Theme = Theme.light;\r\n  @observable overlayOpen = false;\r\n  @observable sideBarOpen = false;\r\n  @observable isLoggedIn = false;\r\n\r\n  @action setTokens = (access_token: string | null, refresh_token: string | null) => {\r\n    this.access_token = access_token;\r\n    this.refresh_token = refresh_token;\r\n  };\r\n\r\n  @action setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n\r\n  @action setLanguage = (lang: Lang) => {\r\n    i18n.changeLanguage(lang);\r\n    this.lang = lang;\r\n    switch (lang) {\r\n      case 'kk':\r\n        this.locale = kk;\r\n        break;\r\n      case 'en':\r\n        this.locale = enUS;\r\n        break;\r\n      case 'ru':\r\n      default:\r\n        this.locale = ru;\r\n    }\r\n  };\r\n\r\n  @action setTheme = (theme: Theme) => {\r\n    this.theme = theme;\r\n  };\r\n\r\n  @action setOverlayOpenState = (state: boolean) => {\r\n    this.overlayOpen = state;\r\n  }\r\n\r\n  @action setSidebarOpenState = (state: boolean) => {\r\n    this.sideBarOpen = state;\r\n  }\r\n}\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport createAuthRefreshInterceptor from 'axios-auth-refresh';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  IResponse,\r\n  IFileListItem,\r\n  IListFilesFormValues,\r\n  IListCommentsFormValues,\r\n  ICommentListItem,\r\n} from '../models/common';\r\nimport {\r\n  ILoanApplicationListItem,\r\n  ILoanApplicationListForm,\r\n  ILoanApplicationNavigation,\r\n  ILoanApplicationDetails,\r\n  IExpertiseResult,\r\n} from '../models/loanApplication';\r\nimport {\r\n  IChangePasswordFormValues,\r\n  IProfile,\r\n  IProfileFormValues,\r\n} from '../models/profile';\r\nimport { IUser, IUserFormValues } from '../models/user';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BPM_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (cfg) => {\r\n    const access_token = window.localStorage.getItem('jwt_access');\r\n    const refresh_token = window.localStorage.getItem('jwt_refresh');\r\n    const lang = window.localStorage.getItem('i18nextLng');\r\n    if (access_token && refresh_token) {\r\n      cfg.headers.Authorization = `Bearer ${access_token}`;\r\n      cfg.headers['X-Access-Token'] = access_token;\r\n      cfg.headers['X-Refresh-Token'] = refresh_token;\r\n      cfg.headers['Accept-Language'] = lang;\r\n    }\r\n    return cfg;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nconst refreshAuthLogic = (failedRequest: any) =>\r\n  axios.post('users/refresh').then((tokenRefreshResponse) => {\r\n    if (tokenRefreshResponse.data.succeed) {\r\n      localStorage.setItem(\r\n        'jwt_access',\r\n        tokenRefreshResponse.data.data.accessToken,\r\n      );\r\n      localStorage.setItem(\r\n        'jwt_refresh',\r\n        tokenRefreshResponse.data.data.refreshToken,\r\n      );\r\n      failedRequest.response.config.headers['Authorization'] =\r\n        'Bearer ' + tokenRefreshResponse.data.accessToken;\r\n\r\n      return Promise.resolve();\r\n    } else {\r\n      localStorage.removeItem('jwt_access');\r\n      localStorage.removeItem('jwt_refresh');\r\n\r\n      return Promise.reject();\r\n    }\r\n  });\r\n\r\ncreateAuthRefreshInterceptor(axios, refreshAuthLogic);\r\n\r\n// TODO: Check why not applied\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  const locale = window.localStorage.getItem('i18nextLng');\r\n  let message = 'Ошибка сервера. Пожалуйста обратитесь к администратору';\r\n\r\n  if (error.message.toLowerCase() === 'network error' && !error.response) {\r\n    message = 'Проблема с интернет подключением';\r\n    if (locale === 'kk') message = 'Интернетке қосылуда ақау байқалуда';\r\n    else if (locale === 'en') message = 'Internet connection problem';\r\n\r\n    toast.error(message);\r\n  }\r\n\r\n  if (error.response) {\r\n    const { status } = error.response;\r\n\r\n    if (status >= 500) {\r\n      if (locale === 'kk')\r\n        message = 'Серверлік қате. Администраторға хабарласуыңызды өтінеміз';\r\n      else if (locale === 'en')\r\n        message = 'Server error. Please contact to administrator';\r\n\r\n      toast.error(message);\r\n    }\r\n\r\n    if (isResponse(error.response.data)) throw error.response;\r\n\r\n    throw error.response;\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\n// TODO: make it work\r\nconst isResponse = (response: any): response is IResponse<any> => {\r\n  if ((response as IResponse<any>).message) return true;\r\n\r\n  return false;\r\n};\r\n\r\nconst responseBody = (response: AxiosResponse) => response?.data;\r\n\r\nconst requests = {\r\n  get: (url: string, config?: AxiosRequestConfig | undefined) =>\r\n    axios.get(url, config).then(responseBody),\r\n  post: (url: string, body: {}, config?: AxiosRequestConfig) =>\r\n    axios.post(url, body, config).then(responseBody),\r\n  put: (url: string, body: {}, config?: AxiosRequestConfig) =>\r\n    axios.put(url, body, config).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst User = {\r\n  login: (user: IUserFormValues): Promise<IResponse<IUser>> =>\r\n    requests.post(`users/login`, user),\r\n  register: (user: IUserFormValues): Promise<IResponse<IUser>> =>\r\n    requests.post(`users/register`, user),\r\n  refresh: (): Promise<IResponse<IUser>> => requests.post(`users/refresh`, {}),\r\n};\r\n\r\nconst Files = {\r\n  upload: (formData: FormData): Promise<IResponse<void>> =>\r\n    requests.post(`files`, formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    }),\r\n  remove: (fileId: string): Promise<IResponse<void>> =>\r\n    requests.delete(`files/${fileId}`),\r\n};\r\n\r\nconst Profile = {\r\n  get: (): Promise<IResponse<IProfile>> => requests.get('users/profile'),\r\n  update: (formData: FormData): Promise<IResponse<IProfile>> =>\r\n    requests.put('users/profile', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    }),\r\n  changePassword: (data: IChangePasswordFormValues): Promise<IResponse<null>> =>\r\n    requests.put('users/password', data),\r\n};\r\n\r\nconst Comments = {\r\n  list: (\r\n    form: IListCommentsFormValues,\r\n  ): Promise<IResponse<{ list: ICommentListItem[]; count: number }>> =>\r\n    requests.get('comments/', { params: form }),\r\n  add: (formData: FormData): Promise<IResponse<void>> =>\r\n    requests.post(`comments`, formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    }),\r\n  remove: (commentId: string): Promise<IResponse<void>> =>\r\n    requests.delete(`comments/${commentId}`),\r\n};\r\n\r\nconst LoanApplication = {\r\n  getList: (\r\n    form: ILoanApplicationListForm,\r\n  ): Promise<IResponse<{ list: ILoanApplicationListItem[]; count: number }>> =>\r\n    requests.get('loanApplications/', { params: form }),\r\n  getNavigationItems: (): Promise<IResponse<ILoanApplicationNavigation[]>> =>\r\n    requests.get('loanApplications/navigation'),\r\n  getDetails: (id: string): Promise<IResponse<ILoanApplicationDetails>> =>\r\n    requests.get(`loanApplications/${id}`),\r\n  getDocuments: (\r\n    form: IListFilesFormValues,\r\n  ): Promise<IResponse<IFileListItem[]>> =>\r\n    requests.get('files', { params: form }),\r\n  completeTask: (formData: FormData): Promise<IResponse<void>> =>\r\n    requests.post(`loanApplications/task/complete`, formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    }),\r\n  getExpertiseResults: (id: string): Promise<IResponse<IExpertiseResult[]>> =>\r\n    requests.get(`loanApplications/expertise/${id}`),\r\n};\r\n\r\nexport default {\r\n  User,\r\n  Files,\r\n  Comments,\r\n  LoanApplication,\r\n  Profile,\r\n};\r\n","import { observable, computed, action, runInAction } from 'mobx';\r\nimport jwt_decode from 'jwt-decode';\r\nimport agent from '../api/agent';\r\nimport { RootStore } from './rootStore';\r\nimport { history } from '../..';\r\nimport { IUser, IUserFormValues } from '../models/user';\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n  @observable loginModalOpen = false;\r\n  @observable pending = false;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      this.pending = true;\r\n\r\n      const result = await agent.User.login(values);\r\n      runInAction('user login', () => {\r\n        this.user = result.data;\r\n        this.loginModalOpen = false;\r\n        this.pending = false;\r\n\r\n        this.rootStore.commonStore.setTokens(\r\n          result.data.accessToken,\r\n          result.data.refreshToken,\r\n        );\r\n        history.push('/tasklist');\r\n      });\r\n    } catch (error) {\r\n      runInAction('user login', () => {\r\n        this.pending = false;\r\n        throw error.data;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action register = async (values: IUserFormValues) => {\r\n    try {\r\n      const result = await agent.User.register(values);\r\n      runInAction(() => {\r\n        this.user = result.data;\r\n        this.rootStore.commonStore.setTokens(\r\n          result.data.accessToken,\r\n          result.data.refreshToken,\r\n        );\r\n        history.push('/tasklist');\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action refreshToken = async () => {\r\n    try {\r\n      const result = await agent.User.refresh();\r\n\r\n      runInAction(() => {\r\n        this.user = result.data;\r\n        this.rootStore.commonStore.setTokens(\r\n          result.data.accessToken,\r\n          result.data.refreshToken,\r\n        );\r\n        history.push('/tasklist');\r\n      });\r\n    } catch (error) {\r\n      this.logout();\r\n    }\r\n  };\r\n\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setTokens(null, null);\r\n    this.rootStore.commonStore.setSidebarOpenState(false);\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n\r\n  @action setLoginModalOpenState = (state: boolean) => {\r\n    this.loginModalOpen = state;\r\n  };\r\n\r\n  @action fillDisplayNameFromToken = (\r\n    access_token: string,\r\n    refresh_token: string,\r\n  ) => {\r\n    const decoded: any = jwt_decode(access_token);\r\n\r\n    this.user = {\r\n      displayName:\r\n        `${decoded.lastName} ${decoded.firstName} ${decoded.middleName}`.trim(),\r\n      accessToken: access_token,\r\n      refreshToken: refresh_token,\r\n    };\r\n  };\r\n}\r\n","import { action, observable, runInAction } from 'mobx';\r\nimport { RootStore } from './rootStore';\r\nimport {\r\n  IChangePasswordFormValues,\r\n  IProfile,\r\n  IProfileFormValues,\r\n} from '../models/profile';\r\nimport agent from '../api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable loading = false;\r\n  @observable profile: IProfile | null = null;\r\n\r\n  @action loadProfile = async () => {\r\n    try {\r\n      this.loading = true;\r\n\r\n      var result = await agent.Profile.get();\r\n      runInAction(() => {\r\n        this.profile = result.data;\r\n        this.loading = false;\r\n      });\r\n    } catch (ex) {\r\n      runInAction('load profile', () => {\r\n        this.profile = null;\r\n        this.loading = false;\r\n        if (ex.data) {\r\n          toast.error(ex.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (data: IProfileFormValues) => {\r\n    try {\r\n      this.loading = true;\r\n\r\n      var formData = new FormData();\r\n      formData.append('firstname', data.firstname);\r\n      formData.append('lastname', data.lastname);\r\n      formData.append('middlename', data.middlename);\r\n      formData.append(\r\n        'birthDate',\r\n        `${data.birthDate.getDate()}-${\r\n          data.birthDate.getMonth() + 1\r\n        }-${data.birthDate.getFullYear()}`,\r\n      );\r\n      formData.append('email', data.email);\r\n      formData.append('phone', data.phone);\r\n      formData.append('image', data.image);\r\n\r\n      var result = await agent.Profile.update(formData);\r\n      runInAction(() => {\r\n        this.profile = result.data;\r\n        this.loading = false;\r\n        toast.success(result.message);\r\n      });\r\n    } catch (ex) {\r\n      runInAction('update profile', () => {\r\n        this.profile = null;\r\n        this.loading = false;\r\n        throw ex.data;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action changePassword = async (data: IChangePasswordFormValues) => {\r\n    try {\r\n      this.loading = true;\r\n\r\n      var result = await agent.Profile.changePassword(data);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n        toast.success(result.message);\r\n      });\r\n    } catch (ex) {\r\n      runInAction('update profile', () => {\r\n        this.loading = false;\r\n        throw ex.data;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { observable, action, runInAction } from 'mobx';\r\nimport { RootStore } from './rootStore';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class NcaLayerStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  module = 'kz.gov.pki.knca.commonUtils';\r\n  storageName = 'PKCS12'; // тип хранилища\r\n  keyTypeValue = 'SIGNATURE'; // тип использования ключа\r\n  tbsElementXPath = ''; // XPath выражение ссылающееся на элемент XML файла предназначенного для подписи\r\n  signatureParentElementXPath = ''; // XPath выражение ссылающееся на родительский элемент, куда будет записана подпись\r\n\r\n  @observable webSocket: WebSocket | null = null;\r\n  @observable isConnectionOpen = false;\r\n\r\n  @action openConnection = () => {\r\n    this.webSocket = new WebSocket(process.env.REACT_APP_NCA_LAYER_URL!);\r\n\r\n    this.webSocket.onopen = (event: Event) => {\r\n      runInAction(() => {\r\n        this.isConnectionOpen = true;\r\n      });\r\n    };\r\n\r\n    this.webSocket.onclose = (event: CloseEvent) => {\r\n      if (!event.wasClean)\r\n        toast.warn(\r\n          'Ошибка при подключении к NCALayer, запустите NCALayer и попробуйте снова',\r\n        );\r\n\r\n      runInAction(() => {\r\n        this.isConnectionOpen = false;\r\n      });\r\n    };\r\n\r\n    this.webSocket.onerror = (event: Event) => {\r\n      console.error(event);\r\n    };\r\n\r\n    this.webSocket.onmessage = (event: MessageEvent) => {\r\n      // TODO: do something with response and define method name\r\n      if (event.type === 'message') {\r\n        console.log(JSON.parse(event.data));\r\n      }\r\n      console.log(event);\r\n    };\r\n  };\r\n\r\n  @action closeConnection = () => {\r\n    if (this.webSocket !== null && this.isConnectionOpen) {\r\n      this.webSocket.close();\r\n    }\r\n  };\r\n\r\n  @action authorize = () => {\r\n    if (!this.isConnectionOpen) this.openConnection();\r\n\r\n    if (this.webSocket !== null && this.isConnectionOpen) {\r\n      const data = {\r\n        module: this.module,\r\n        method: 'getKeyInfo',\r\n        args: [this.storageName],\r\n      };\r\n\r\n      this.webSocket.send(JSON.stringify(data));\r\n    }\r\n  };\r\n\r\n  @action signXml = (xml: string) => {\r\n    if (!this.isConnectionOpen) this.openConnection();\r\n\r\n    if (this.webSocket !== null && this.isConnectionOpen) {\r\n      const data = {\r\n        module: this.module,\r\n        method: 'signXml',\r\n        args: [\r\n          this.storageName,\r\n          this.keyTypeValue,\r\n          xml,\r\n          this.tbsElementXPath,\r\n          this.signatureParentElementXPath,\r\n        ],\r\n      };\r\n\r\n      this.webSocket.send(JSON.stringify(data));\r\n    }\r\n  };\r\n}\r\n","import { action, computed, observable, reaction, runInAction } from 'mobx';\r\nimport { toast } from 'react-toastify';\r\nimport agent from '../api/agent';\r\nimport { OrderDirection } from '../models/common';\r\nimport {\r\n  ILoanApplicationListItem,\r\n  ILoanApplicationNavigation,\r\n} from '../models/loanApplication';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport default class LoanApplicationListStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.page,\r\n      async () => await this.getLoanApplications(),\r\n    );\r\n\r\n    reaction(\r\n      () => this.pageLimit,\r\n      async () => await this.getLoanApplications(),\r\n    );\r\n\r\n    reaction(\r\n      () => this.order,\r\n      async () => await this.getLoanApplications(),\r\n    );\r\n\r\n    reaction(\r\n      () => this.navigationParams,\r\n      async () => await this.getLoanApplications(),\r\n    );\r\n  }\r\n\r\n  @observable pending = false;\r\n  @observable page = 0;\r\n  @observable pageLimit = 10;\r\n  @observable order: OrderDirection = 'desc';\r\n  @observable orderBy: keyof ILoanApplicationListItem = 'appointmentDate';\r\n  @observable search: string = '';\r\n  @observable count = 0;\r\n  @observable loanApplications: Partial<ILoanApplicationListItem>[] = [];\r\n  @observable loanStatus: string | null = null;\r\n  @observable userRole: string | null = null;\r\n  @observable navigationPending = false;\r\n  @observable navigationItems: ILoanApplicationNavigation[] = [];\r\n\r\n  @computed get navigationParams() {\r\n    return {\r\n      loanStatus: this.loanStatus,\r\n      userRole: this.userRole,\r\n    };\r\n  }\r\n\r\n  @action handlePageChange = (_: unknown, newPage: number) => {\r\n    this.page = newPage;\r\n  };\r\n\r\n  @action handlePageLimitChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    this.pageLimit = parseInt(event.target.value);\r\n  };\r\n\r\n  @action handleOrderingChange = (property: keyof ILoanApplicationListItem) => {\r\n    const isAsc = this.orderBy === property && this.order === 'asc';\r\n    this.order = isAsc ? 'desc' : 'asc';\r\n    this.orderBy = property;\r\n  };\r\n\r\n  @action handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.search = event.target.value;\r\n  };\r\n\r\n  @action getLoanApplications = async () => {\r\n    try {\r\n      this.pending = true;\r\n      const result = await agent.LoanApplication.getList({\r\n        page: this.page + 1,\r\n        pageLimit: this.pageLimit,\r\n        orderBy: this.orderBy,\r\n        order: this.order,\r\n        search: this.search,\r\n        statusId: this.loanStatus,\r\n        roleId: this.userRole,\r\n      });\r\n\r\n      runInAction(() => {\r\n        this.pending = false;\r\n        this.count = result.data.count;\r\n        this.loanApplications = result.data.list;\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.pending = false;\r\n        if (ex.data) {\r\n          toast.error(ex.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getNavigationItems = async () => {\r\n    try {\r\n      this.navigationPending = true;\r\n      const result = await agent.LoanApplication.getNavigationItems();\r\n\r\n      runInAction(() => {\r\n        this.navigationPending = false;\r\n        this.navigationItems = result.data;\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.navigationPending = false;\r\n        if (ex.data) {\r\n          toast.error(ex.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  @action selectNavigationItem = (\r\n    userRole: string | null,\r\n    loanStatus: string | null,\r\n  ) => {\r\n    this.userRole = userRole;\r\n    this.loanStatus = loanStatus;\r\n  };\r\n}\r\n","import { action, observable, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { history } from '../../';\r\nimport {\r\n  ICompleteTaskFormValues,\r\n  IExpertiseResult,\r\n  ILoanApplicationDetails,\r\n  IUserReportCheckboxFormValues,\r\n} from '../models/loanApplication';\r\nimport { RootStore } from './rootStore';\r\nimport {\r\n  EntityTypes,\r\n  ICommentListItem,\r\n  IListCommentsFormValues,\r\n  IListFilesFormValues,\r\n} from '../models/common';\r\nimport { toast } from 'react-toastify';\r\nimport { Dictionary } from 'lodash';\r\n\r\nexport default class LoadApplicationDetailsStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable detailsAreLoading = false;\r\n  @observable loanApplicationTaskId: string | null = null;\r\n  @observable loanApplicationTaskStatusId: string | null = null;\r\n  @observable loanApplication: ILoanApplicationDetails | null = null;\r\n  @observable expertiseResults: IExpertiseResult[] = [];\r\n\r\n  @observable expertiseResultsLoading = false;\r\n  @observable completeTaskLoading = false;\r\n  @observable uploadingFiles = false;\r\n\r\n  @observable\r\n  userReportFormValues: Dictionary<IUserReportCheckboxFormValues> = {};\r\n\r\n  @action setUserReportFormCheckboxValue = (\r\n    formId: string,\r\n    key: string,\r\n    value: boolean,\r\n  ) => {\r\n    if (this.userReportFormValues[formId] === undefined) {\r\n      this.userReportFormValues[formId] = {\r\n        fields: {},\r\n      };\r\n    }\r\n\r\n    this.userReportFormValues[formId].fields[key] = value;\r\n  };\r\n\r\n  @action setLoanApplicationTaskId = (id: string) => {\r\n    this.loanApplicationTaskId = id;\r\n  };\r\n\r\n  @action setLoanApplicationTaskStatusId = (statusId: string | null) => {\r\n    this.loanApplicationTaskStatusId = statusId;\r\n  };\r\n\r\n  @action getLoanApplicationDetails = async (id: string) => {\r\n    try {\r\n      this.detailsAreLoading = true;\r\n      var result = await agent.LoanApplication.getDetails(id);\r\n\r\n      runInAction(() => {\r\n        this.detailsAreLoading = false;\r\n        this.loanApplication = result.data;\r\n\r\n        this.loanApplication.forms.forEach((form) => {\r\n          this.userReportFormValues[form.id] = {\r\n            fields: {},\r\n          };\r\n\r\n          form.fields.forEach((field) => {\r\n            this.setUserReportFormCheckboxValue(\r\n              form.id,\r\n              field.id,\r\n              field.isChecked,\r\n            );\r\n          });\r\n        });\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.detailsAreLoading = false;\r\n        this.loanApplication = null;\r\n        history.push('/not-found');\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getExpertiseResults = async () => {\r\n    try {\r\n      this.expertiseResultsLoading = true;\r\n\r\n      const result = await agent.LoanApplication.getExpertiseResults(\r\n        this.loanApplicationTaskId!,\r\n      );\r\n\r\n      if (result.succeed) {\r\n        runInAction(() => {\r\n          this.expertiseResultsLoading = false;\r\n          this.expertiseResults = result.data;\r\n        });\r\n      }\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.expertiseResultsLoading = false;\r\n        this.expertiseResults = [];\r\n      });\r\n    }\r\n  };\r\n\r\n  @action completeTask = async (\r\n    formId: string,\r\n    data: Partial<ICompleteTaskFormValues>,\r\n  ) => {\r\n    try {\r\n      this.completeTaskLoading = true;\r\n\r\n      const formData = new FormData();\r\n      formData.append('taskId', this.loanApplicationTaskId!);\r\n      formData.append(\r\n        'taskStatusId',\r\n        data.taskStatusId ?? this.loanApplicationTaskStatusId!,\r\n      );\r\n\r\n      if (data.comment && data.files) {\r\n        formData.append('comment', data.comment);\r\n        Array.from(data.files).forEach((file, idx) => {\r\n          formData.append(`files`, file);\r\n        });\r\n      }\r\n\r\n      for (const [key, value] of Object.entries(\r\n        this.userReportFormValues[formId].fields,\r\n      )) {\r\n        formData.append(`fields[${key}]`, value.toString());\r\n      }\r\n\r\n      const result = await agent.LoanApplication.completeTask(formData);\r\n\r\n      runInAction(() => {\r\n        this.completeTaskLoading = false;\r\n\r\n        if (result.succeed) {\r\n          this.setLoanApplicationTaskStatusId(null);\r\n          history.push('/tasklist');\r\n        }\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.completeTaskLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action uploadDocuments = async (files: FileList | null) => {\r\n    try {\r\n      this.uploadingFiles = true;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\r\n        'entityId',\r\n        this.loanApplication!.application.loanApplicationId,\r\n      );\r\n      formData.append('entityType', EntityTypes.LoanApplication.toString());\r\n      Array.from(files!).forEach((file) => {\r\n        formData.append(`files`, file);\r\n      });\r\n\r\n      const result = await agent.Files.upload(formData).finally(\r\n        async () => await this.getDocuments(),\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.uploadingFiles = false;\r\n        toast.success(result.message);\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.uploadingFiles = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action removeDocument = async (fileId: string) => {\r\n    try {\r\n      this.uploadingFiles = true;\r\n\r\n      const result = await agent.Files.remove(fileId).finally(\r\n        async () => await this.getDocuments(),\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.uploadingFiles = false;\r\n        toast.success(result.message);\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.uploadingFiles = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getDocuments = async () => {\r\n    try {\r\n      const form: IListFilesFormValues = {\r\n        entityId: this.loanApplication!.application.loanApplicationId,\r\n        entityType: EntityTypes.LoanApplication,\r\n      };\r\n\r\n      var result = await agent.LoanApplication.getDocuments(form);\r\n\r\n      runInAction(() => {\r\n        this.uploadingFiles = false;\r\n        this.loanApplication!.documents = result.data;\r\n      });\r\n    } catch (ex) {\r\n      runInAction(() => {\r\n        this.uploadingFiles = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action getComments = async (\r\n    entityId: string,\r\n    page: number,\r\n    pageLimit: number,\r\n  ): Promise<{ list: ICommentListItem[]; count: number } | null> => {\r\n    try {\r\n      const queryParams: IListCommentsFormValues = {\r\n        page,\r\n        pageLimit,\r\n        roleControlsFieldId: entityId,\r\n        loanApplicationTaskId: this.loanApplicationTaskId!,\r\n      };\r\n\r\n      var result = await agent.Comments.list(queryParams);\r\n\r\n      return result.data;\r\n    } catch (ex) {\r\n      // TODO: show error if not > 500\r\n      return null;\r\n    }\r\n  };\r\n\r\n  @action addComment = async (\r\n    entityId: string,\r\n    comment: string,\r\n    files: FileList | null,\r\n  ): Promise<void> => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('roleControlsFieldId', entityId);\r\n      formData.append('loanApplicationTaskId', this.loanApplicationTaskId!);\r\n      formData.append('text', comment);\r\n      Array.from(files!).forEach((file) => {\r\n        formData.append(`files`, file);\r\n      });\r\n\r\n      const result = await agent.Comments.add(formData);\r\n\r\n      runInAction(() => {\r\n        toast.success(result.message);\r\n      });\r\n    } catch (ex) {\r\n      // TODO: show error if not > 500\r\n    }\r\n  };\r\n\r\n  @action removeComment = async (commentId: string): Promise<void> => {\r\n    try {\r\n      const result = await agent.Comments.remove(commentId);\r\n\r\n      runInAction(() => {\r\n        toast.success(result.message);\r\n      });\r\n    } catch (ex) {\r\n      // TODO: show error if not > 500\r\n    }\r\n  };\r\n}\r\n","import { createContext } from 'react';\r\nimport { configure } from 'mobx';\r\nimport CommonStore from './commonStore';\r\nimport UserStore from './userStore';\r\nimport ProfileStore from './profileStore';\r\nimport NcaLayerStore from './ncaLayerStore';\r\nimport LoanApplicationListStore from './loanAppListStore';\r\nimport LoadApplicationDetailsStore from './loanAppDetailsStore';\r\n\r\nconfigure({ enforceActions: 'always' });\r\n\r\nexport class RootStore {\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  profileStore: ProfileStore;\r\n  ncaLayerStore: NcaLayerStore;\r\n  loanApplicationListStore: LoanApplicationListStore;\r\n  loadApplicationDetailsStore: LoadApplicationDetailsStore;\r\n\r\n  constructor() {\r\n    this.commonStore = new CommonStore(this);\r\n    this.userStore = new UserStore(this);\r\n    this.loanApplicationListStore = new LoanApplicationListStore(this);\r\n    this.loadApplicationDetailsStore = new LoadApplicationDetailsStore(this);\r\n    this.ncaLayerStore = new NcaLayerStore(this);\r\n    this.profileStore = new ProfileStore(this);\r\n  }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { Dictionary } from 'lodash';\r\nimport { IFileListItem, ITableData, OrderDirection } from './common';\r\nimport { UserRole } from './user';\r\n\r\n// List\r\nexport interface ILoanApplicationListItem {\r\n  loanApplicationId: string;\r\n  loanApplicationTaskId: string;\r\n  appointmentDate: Date;\r\n  fullname: string;\r\n  iin: string;\r\n  loanType: string;\r\n  loanProduct: string;\r\n  loanStatus: string;\r\n  registerNumber: string;\r\n  clientSegment: string;\r\n}\r\n\r\nexport interface ILoanApplicationListForm {\r\n  page: number;\r\n  pageLimit: number;\r\n  order: OrderDirection;\r\n  orderBy: keyof ILoanApplicationListItem;\r\n  search: string;\r\n  statusId: string | null;\r\n  roleId: string | null;\r\n}\r\n\r\nexport interface ILoanApplicationNavigation {\r\n  roleId: string | null;\r\n  name: string;\r\n  items: INavigationItem[];\r\n}\r\n\r\nexport interface INavigationItem {\r\n  statusId: string | null;\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\n// Details\r\nexport interface ILoanApplicationDetails {\r\n  application: ILoanApplicationDetailsCommonData;\r\n  clientDetails: IClientDetails;\r\n  assets: IAssetsTable;\r\n  contracts: IContractsTable;\r\n  documents: IFileListItem[];\r\n  forms: IFormSettings[];\r\n  finAnalysis: IFinAnalysis;\r\n}\r\n\r\nexport interface ILoanApplicationDetailsCommonData {\r\n  loanApplicationId: string;\r\n  createdDate: Date;\r\n  userRole: UserRole;\r\n  taskStatus: TaskStatus;\r\n  pkbFile: IFileListItem;\r\n}\r\n\r\nexport interface IPersonalData {\r\n  fullname: string | null;\r\n  maritalStatus: string | null;\r\n  childrenCount: number;\r\n  iin: string | null;\r\n  identification: string | null;\r\n  address: string | null;\r\n  phoneNumber: string | null;\r\n}\r\n\r\nexport interface IAssetsTable {\r\n  land: ITableData;\r\n  bio: ITableData;\r\n  flora: ITableData;\r\n  tech: ITableData;\r\n}\r\n\r\nexport interface IContractsTable {\r\n  calculators: ITableData;\r\n  techniques: ITableData;\r\n}\r\n\r\nexport interface IFinAnalysis {\r\n  dateOfInspection: string;\r\n  overallStatus: string;\r\n  results: IFinAnalysisResultItem[];\r\n}\r\n\r\nexport interface IFinAnalysisResultItem {\r\n  blockName: string;\r\n  subjects: IFinAnalysisSubject[];\r\n  file: IFileListItem;\r\n}\r\n\r\nexport interface IFinAnalysisSubject {\r\n  name: string;\r\n  status: VerificationStatus | null;\r\n  statusName: string | null;\r\n}\r\n\r\nexport enum VerificationStatus {\r\n  ServiceUnavailable = 0,\r\n  Correct = 1,\r\n  Minor = 2,\r\n  Critical = 3,\r\n}\r\n\r\nexport interface IFormSettings {\r\n  id: string;\r\n  title: string;\r\n  subtitle: string;\r\n  isReadOnly: boolean;\r\n  buttons: IFormSettingsButton[];\r\n  fields: IFormSettingsField[];\r\n}\r\n\r\nexport interface IFormSettingsButton {\r\n  hasForm: boolean;\r\n  taskStatusId: string;\r\n  isApply: boolean;\r\n  name: string;\r\n  dialogTitle: string;\r\n  dialogMessage: string;\r\n}\r\n\r\nexport interface IFormSettingsField {\r\n  id: string;\r\n  isChecked: boolean;\r\n  countOfComments: number;\r\n  name: string;\r\n}\r\n\r\nexport interface ICompleteTaskFormValues {\r\n  taskId: string;\r\n  taskStatusId: string;\r\n  comment: string;\r\n  files: Blob[];\r\n  fields: Dictionary<boolean>;\r\n}\r\n\r\nexport enum TaskStatus {\r\n  Completed = 'Completed',\r\n  Rejected = 'Rejected',\r\n  InWork = 'InWork',\r\n  Created = 'Created',\r\n}\r\n\r\nexport interface IUserReportCheckboxFormValues {\r\n  fields: Dictionary<boolean>;\r\n}\r\n\r\nexport interface IUserReportCommentFormValues {\r\n  comment: string;\r\n  files: FileList;\r\n}\r\n\r\nexport interface IExpertiseResult {\r\n  roleName: string;\r\n  comment: string;\r\n  files: IFileListItem[];\r\n}\r\n\r\n// New\r\nexport interface IPersonality {\r\n  id?: string;\r\n  identifier: string;\r\n  fullName: string;\r\n  fax: string;\r\n  email: string;\r\n  phone: IPhone;\r\n  address: IAddress;\r\n  identificationDocument: IDocument;\r\n  workExperience?: IWorkExperience;\r\n  region?: string;\r\n}\r\n\r\nexport interface IWorkExperience {\r\n  id?: string;\r\n  total: string;\r\n  agriculture: string;\r\n}\r\n\r\nexport interface IPhone {\r\n  id?: string;\r\n  home: string;\r\n  mobile: string;\r\n  work: string;\r\n}\r\n\r\nexport interface IAddress {\r\n  id?: string;\r\n  fact: string;\r\n  register: string;\r\n}\r\n\r\nexport interface IDocument {\r\n  id?: string;\r\n  number: string;\r\n  issuer: string;\r\n  dateIssue: Date;\r\n}\r\n\r\nexport interface IBankAccount {\r\n  id?: string;\r\n  bic: string;\r\n  number: string;\r\n}\r\n\r\nexport interface ICreditHistory {\r\n  id?: string;\r\n  fullName: string;\r\n  dateIssue: Date;\r\n  period: number;\r\n  sum: number;\r\n  balance: number;\r\n}\r\n\r\nexport interface IDebt {\r\n  id?: string;\r\n  bic: string;\r\n  debt: number;\r\n}\r\n\r\nexport interface IPerson extends IPersonality {\r\n  id?: string;\r\n  birthDate: Date;\r\n  birthPlace: string;\r\n  country: string;\r\n  marriageStatus: string;\r\n  education: string;\r\n  spouse?: string;\r\n}\r\n\r\nexport interface IOrganization extends IPersonality {\r\n  id?: string;\r\n  organizationType: string;\r\n  ownershipForm: string;\r\n  oked: string[];\r\n  registrationDocument: IDocument;\r\n  parent: string;\r\n  bankAccounts: IBankAccount[];\r\n  shareInCapital: number;\r\n  debts: IDebt[];\r\n  isAffiliated: boolean;\r\n  affiliatedOrganizations: IOrganization[];\r\n  creditHistory: ICreditHistory[];\r\n}\r\n\r\nexport interface IClientDetails {\r\n  id?: string;\r\n  organization: IOrganization;\r\n  head: IPerson;\r\n  booker: IPerson;\r\n  beneficiary?: IPerson;\r\n  representative?: IPerson;\r\n  contacts: IPerson[];\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\n\r\n\r\ninterface IProps extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>>;\r\n}\r\n\r\nconst PrivateRoute: React.FC<IProps> = ({ component: Component, ...rest }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn } = rootStore.userStore;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Material components\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Link from '@material-ui/core/Link';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  list: {\r\n    margin: `${theme.spacing(5)}px 0`,\r\n  },\r\n  listItem: {},\r\n  listItemActive: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  listItemIconActive: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  divider: {\r\n    margin: `${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n  },\r\n}));\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { sideBarOpen, setSidebarOpenState } = rootStore.commonStore;\r\n  const { logout } = rootStore.userStore;\r\n\r\n  const menuItems = [\r\n    {\r\n      to: '/tasklist',\r\n      text: t('COMPONENTS.SIDE_BAR.TASKS_LIST'),\r\n      icon: <AssignmentIcon />,\r\n    },\r\n    {\r\n      to: '/profile',\r\n      text: t('COMPONENTS.SIDE_BAR.PROFILE'),\r\n      icon: <PersonIcon />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer open={sideBarOpen} onClose={() => setSidebarOpenState(false)}>\r\n      <div className={classes.root}>\r\n        <List className={classes.list}>\r\n          {menuItems.map((item, idx) => (\r\n            <Link\r\n              key={idx}\r\n              to={item.to}\r\n              component={RouterLink}\r\n              color=\"inherit\"\r\n              underline=\"none\"\r\n            >\r\n              <ListItem\r\n                className={clsx(classes.listItem, {\r\n                  [classes.listItemActive]: location.pathname === item.to,\r\n                })}\r\n                button\r\n                key={item.to}\r\n                onClick={() => setSidebarOpenState(false)}\r\n              >\r\n                <ListItemIcon\r\n                  className={clsx({\r\n                    [classes.listItemIconActive]: location.pathname === item.to,\r\n                  })}\r\n                >\r\n                  {item.icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.text} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n          <Divider className={classes.divider} />\r\n          <ListItem\r\n            className={classes.listItem}\r\n            button\r\n            onClick={() => logout()}\r\n          >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={t('COMMON.EXIT')} />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default observer(Sidebar);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n  }\r\n}));\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  fullScreen?: boolean;\r\n  title?: string;\r\n  content: React.ReactElement | null;\r\n}\r\n\r\nconst UniversalDialog: React.FC<IProps> = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  content,\r\n  fullScreen = false,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      fullScreen={fullScreen}\r\n      scroll=\"body\"\r\n      maxWidth=\"lg\"\r\n      aria-labelledby=\"dialog-title\"\r\n      classes={{\r\n        root: classes.root,\r\n      }}\r\n    >\r\n      {title && <DialogTitle id=\"dialog-title\">{title}</DialogTitle>}\r\n      <DialogContent>\r\n        {content}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UniversalDialog;\r\n","import * as yup from 'yup';\r\n\r\nexport default yup.object().shape({\r\n  login: yup\r\n    .string()\r\n    .length(12, 'ИИН должен состоять ровно из 12 цифр')\r\n    .required('Введите логин (ИИН)'),\r\n  password: yup.string().required('Введите пароль'),\r\n});\r\n","import React, { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport InputMask from 'react-input-mask';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport loginValidationScheme from '../../app/validators/loginValidationScheme';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: 300,\r\n    marginBottom: 15,\r\n  },\r\n  input: {\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n  alert: {\r\n    width: '100%',\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n  helperText: {\r\n    color: 'red',\r\n  },\r\n}));\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { login, pending } = rootStore.userStore;\r\n  const { handleSubmit, control, errors } = useForm<IUserFormValues>({\r\n    resolver: yupResolver(loginValidationScheme),\r\n    reValidateMode: 'onBlur',\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await login(data).finally(() => setError(null));\r\n    } catch (ex) {\r\n      if (ex && 'Message' in ex) setError(ex.Message);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={onSubmit}>\r\n      <Controller\r\n        name=\"login\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ value, onChange, onBlur }) => (\r\n          <InputMask\r\n            mask=\"999999999999\"\r\n            value={value}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n          >\r\n            {(inputProps: any) => (\r\n              <TextField\r\n                {...inputProps}\r\n                label={t('COMMON.LOGIN')}\r\n                helperText={errors?.login?.message}\r\n                className={classes.input}\r\n                FormHelperTextProps={{\r\n                  className: classes.helperText,\r\n                }}\r\n                fullWidth\r\n              />\r\n            )}\r\n          </InputMask>\r\n        )}\r\n      />\r\n      <Controller\r\n        name=\"password\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ value, onChange, onBlur }) => (\r\n          <TextField\r\n            value={value}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            type=\"password\"\r\n            label={t('COMMON.PASSWORD')}\r\n            helperText={errors?.password?.message}\r\n            className={classes.input}\r\n            FormHelperTextProps={{\r\n              className: classes.helperText,\r\n            }}\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n      {error && (\r\n        <Alert className={classes.alert} severity=\"error\">\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.input}\r\n        disabled={pending}\r\n      >\r\n        {t('COMPONENTS.TOP_BAR.LOGIN_BUTTON')}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n// Icons\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\n\r\nimport { Lang } from '../models/common';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport UniversalDialog from '../common/dialogs/UniversalDialog';\r\nimport LoginForm from '../../features/user/LoginForm';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    langButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nconst Topbar = () => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { setSidebarOpenState, setLanguage } = rootStore.commonStore;\r\n  const { loginModalOpen, setLoginModalOpenState, isLoggedIn, user } = rootStore.userStore;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const handleLangMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleLangMenuSelect = (lang: Lang) => {\r\n    setLanguage(lang);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {\r\n            isLoggedIn &&\r\n            (<IconButton \r\n                edge=\"start\" \r\n                className={classes.menuButton} \r\n                color=\"inherit\" \r\n                aria-label=\"menu\"\r\n                onClick={() => setSidebarOpenState(true)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>)\r\n          }\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {t(\"TITLE\")}\r\n          </Typography>\r\n\r\n          <IconButton \r\n            color=\"inherit\"\r\n            className={classes.langButton}\r\n            onClick={handleLangMenuOpen}\r\n          >\r\n            <LanguageIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"lang-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => setAnchorEl(null)}\r\n          >\r\n            <MenuItem onClick={() => handleLangMenuSelect(Lang.kk)}>Қаз</MenuItem>\r\n            <MenuItem onClick={() => handleLangMenuSelect(Lang.ru)}>Рус</MenuItem>\r\n          </Menu>\r\n          \r\n          {isLoggedIn \r\n            ? <Typography>{user?.displayName}</Typography>\r\n            : (<Button onClick={() => setLoginModalOpenState(true)} color=\"inherit\">\r\n                {t(\"COMPONENTS.TOP_BAR.LOGIN_BUTTON\")}\r\n              </Button>)}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <UniversalDialog\r\n        open={loginModalOpen}\r\n        onClose={() => setLoginModalOpenState(false)}\r\n        title={t(\"COMPONENTS.TOP_BAR.LOGIN_MODAL_TITLE\")}\r\n        content={<LoginForm />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Topbar);","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: 'rgba(0, 0, 0, .5)'\r\n  }\r\n}))\r\n\r\nconst Overlay = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { overlayOpen, setOverlayOpenState } = rootStore.commonStore;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.root} open={overlayOpen} onClick={() => setOverlayOpenState(false)}></Backdrop>\r\n  )\r\n}\r\n\r\nexport default observer(Overlay);\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    minWidth: 100,\r\n    minHeight: 100,\r\n    left: 0,\r\n    top: 0,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexGrow: 1,\r\n    zIndex: 2000\r\n  }\r\n}));\r\n\r\nconst Spinner = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: `calc(100vh - 64px - ${theme.spacing(2) * 2}px)`\r\n  },\r\n  statusCode: {\r\n    fontSize: '5em',\r\n    fontWeight: 'bold'\r\n  },\r\n  divider: {\r\n    height: 80,\r\n    width: 3,\r\n    display: 'block',\r\n    backgroundColor: '#bbb',\r\n    margin: theme.spacing(0, 4)\r\n  },\r\n  text: {\r\n    fontSize: '3em'\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.statusCode}>404</Typography>\r\n      <span className={classes.divider}></span>\r\n      <Typography className={classes.text}>{t('COMPONENTS.NOT_FOUND.TEXT')}</Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { FormEvent, useContext } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n// Material UI\r\nimport { Theme, makeStyles, fade } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.10),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.15),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    top: 0,\r\n    right: 0,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1.5, 2),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '140px',\r\n      '&:focus': {\r\n        width: '200px',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskListToolbar = () => {  \r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    search,\r\n    handleSearchChange,\r\n    getLoanApplications\r\n  } = rootStore.loanApplicationListStore;\r\n\r\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    await getLoanApplications();\r\n  }\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography className={classes.title} color=\"inherit\" variant=\"h5\" component=\"div\">\r\n        {t('COMPONENTS.TASKS_LIST.TITLE')}\r\n      </Typography>\r\n      <form className={classes.search} onSubmit={onSubmit}>\r\n        <InputBase\r\n          value={search}\r\n          onChange={handleSearchChange}\r\n          placeholder={`${t('COMPONENTS.TASKS_LIST.FULLNAME')}/${t('COMPONENTS.TASKS_LIST.IIN')}`}\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n        />\r\n        <IconButton \r\n          type=\"submit\"\r\n          className={classes.searchIcon}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </form>\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default observer(TaskListToolbar);\r\n","import React, { useContext } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n// Material UI\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nconst TaskListPagination = () => {\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    page, \r\n    pageLimit, \r\n    count,\r\n    handlePageChange, \r\n    handlePageLimitChange\r\n  } = rootStore.loanApplicationListStore;\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[5, 10, 25]}\r\n      component=\"div\"\r\n      count={count}\r\n      page={page}\r\n      rowsPerPage={pageLimit}\r\n      onChangePage={handlePageChange}\r\n      onChangeRowsPerPage={handlePageLimitChange}\r\n      labelRowsPerPage={t('COMPONENTS.TABLE_PAGINATION.ROWS_PER_PAGE')}\r\n      nextIconButtonText={t('COMPONENTS.TABLE_PAGINATION.NEXT')}\r\n      backIconButtonText={t('COMPONENTS.TABLE_PAGINATION.BACK')}\r\n      labelDisplayedRows={({ from, to, count }) => t('COMPONENTS.TABLE_PAGINATION.DISPLAYED_ROWS')\r\n        .replace('{from}', from.toString())\r\n        .replace('{to}', to.toString())\r\n        .replace('{count}', count.toString())}\r\n    />\r\n  )\r\n}\r\n\r\nexport default observer(TaskListPagination);\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport Spinner from '../../../app/layout/Spinner';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme, fade } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    minHeight: 250\r\n  },\r\n  list: {\r\n    backgroundColor: 'transparent',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(1)\r\n    }\r\n  },\r\n  subheader: {\r\n    fontSize: theme.typography.h6.fontSize,\r\n    padding: theme.spacing(2),\r\n    lineHeight: theme.typography.h6.lineHeight\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.primary.main, .07)\r\n    }\r\n  },\r\n  listItemActive: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    boxShadow: theme.shadows[5],\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  listItemText: {\r\n    fontSize: '1.4rem !important',\r\n  },\r\n  listItemActiveText: {\r\n    fontWeight: 'bold',\r\n  },\r\n  value: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    padding: theme.spacing(.5, 1.8),\r\n    fontWeight: 'bold',\r\n    borderRadius: theme.shape.borderRadius\r\n  },\r\n  valueActive: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  }\r\n}));\r\n\r\nconst TaskListNavigation = () => {\r\n  const classes = useStyles();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    navigationItems,\r\n    selectNavigationItem,\r\n    loanStatus,\r\n    userRole,\r\n    getNavigationItems,\r\n    navigationPending\r\n  } = rootStore.loanApplicationListStore;\r\n  const { lang } = rootStore.commonStore;\r\n\r\n  useEffect(() => {\r\n    getNavigationItems();\r\n  }, [getNavigationItems, lang]);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      {\r\n        navigationPending \r\n          ? <Spinner /> \r\n          : navigationItems.map((item, idx) => (\r\n              <List \r\n                key={idx}\r\n                subheader={<ListSubheader className={classes.subheader}>{item.name}</ListSubheader>} \r\n                className={classes.list}\r\n              >\r\n                {\r\n                  item.items.map((status, index) => (\r\n                    <ListItem \r\n                      key={index} \r\n                      className={classes.listItem} \r\n                      selected={item.roleId === userRole && status.statusId === loanStatus}\r\n                      onClick={() => selectNavigationItem(item.roleId, status.statusId)}\r\n                    >\r\n                      <ListItemText \r\n                        classes={{ \r\n                          primary: classes.listItemText\r\n                        }} \r\n                        primary={status.name} />\r\n                      <ListItemSecondaryAction>\r\n                        <Typography \r\n                          className={classes.value}\r\n                          variant=\"caption\"\r\n                        >\r\n                          {status.value}\r\n                        </Typography>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))\r\n                }            \r\n              </List>         \r\n            ))\r\n      }\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default observer(TaskListNavigation);\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { ILoanApplicationListItem } from '../../../app/models/loanApplication';\r\nimport Spinner from '../../../app/layout/Spinner';\r\nimport TaskListToolbar from './TaskListToolbar';\r\nimport TaskListPagination from './TaskListPagination';\r\nimport TaskListNavigation from './TaskListNavigation';\r\n\r\n// Material UI\r\nimport { Theme, makeStyles, fade } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  containerGrid: {\r\n    position: 'relative'\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.10)\r\n    }\r\n  }\r\n}));\r\n\r\ninterface HeadCell {\r\n  id: keyof ILoanApplicationListItem;\r\n  labelCode: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [  \r\n  {\r\n    id: 'registerNumber',\r\n    labelCode: 'REGISTER_NUMBER',\r\n    numeric: false\r\n  },\r\n  {\r\n    id: 'iin',\r\n    labelCode: 'IIN',\r\n    numeric: false\r\n  },\r\n  {\r\n    id: 'fullname',\r\n    labelCode: 'FULLNAME',\r\n    numeric: false\r\n  },\r\n  {\r\n    id: 'loanProduct',\r\n    labelCode: 'LOAN_PRODUCT',\r\n    numeric: false\r\n  },\r\n  {\r\n    id: 'loanType',\r\n    labelCode: 'LOAN_TYPE',\r\n    numeric: false\r\n  },\r\n  {\r\n    id: 'loanStatus',\r\n    labelCode: 'LOAN_STATUS',\r\n    numeric: false\r\n  },\r\n];\r\n\r\nconst TaskList: React.FC = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    loanApplications,\r\n    order,\r\n    orderBy,\r\n    handleOrderingChange,\r\n    getLoanApplications,\r\n    pending\r\n  } = rootStore.loanApplicationListStore;\r\n\r\n  useEffect(() => {\r\n    getLoanApplications();\r\n  }, [getLoanApplications])\r\n\r\n  return (\r\n    <div>      \r\n      <TaskListToolbar />\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={2}>\r\n          <TaskListNavigation />\r\n        </Grid>\r\n        <Grid item xs={12} md={10} className={classes.containerGrid}>\r\n          {pending \r\n            ? <Spinner />\r\n            : (\r\n              <Fragment>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>№</TableCell>\r\n                        {headCells.map((headCell, idx) => (\r\n                          <TableCell\r\n                            key={idx}\r\n                            align={headCell.numeric ? 'right' : 'left'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                          >\r\n                            <TableSortLabel\r\n                              active={orderBy === headCell.id}\r\n                              direction={orderBy === headCell.id ? order : 'asc'}\r\n                              onClick={() => handleOrderingChange(headCell.id)}\r\n                            >\r\n                              {t(`COMPONENTS.TASKS_LIST.${headCell.labelCode}`)}\r\n                            </TableSortLabel>\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {loanApplications.map((loanApplication, index) => (\r\n                        <TableRow key={index} className={classes.tableRow} onClick={() => history.push(`/tasklist/${loanApplication.loanApplicationTaskId}`)}>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{loanApplication.registerNumber}</TableCell>\r\n                          <TableCell>{loanApplication.iin}</TableCell>\r\n                          <TableCell>{loanApplication.fullname}</TableCell>\r\n                          <TableCell>{loanApplication.loanProduct}</TableCell>\r\n                          <TableCell>{loanApplication.loanType}</TableCell>\r\n                          <TableCell>{loanApplication.loanStatus}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TaskListPagination />\r\n              </Fragment>\r\n            )}\r\n          \r\n        </Grid>\r\n      </Grid> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(TaskList);\r\n","import * as yup from 'yup';\r\n\r\nexport default yup.object().shape({\r\n  firstname: yup\r\n    .string()\r\n    .max(50, 'Длина строки не должно превышать 50 символов')\r\n    .required(\"Поле 'Фамилия' обязательное для заполнения\"),\r\n  lastname: yup\r\n    .string()\r\n    .max(50, 'Длина строки не должно превышать 50 символов')\r\n    .required(\"Поле 'Имя' обязательное для заполнения\"),\r\n  middlename: yup\r\n    .string()\r\n    .max(50, 'Длина строки не должно превышать 50 символов')\r\n    .required(\"Поле 'Отчество' обязательное для заполнения\"),\r\n  birthDate: yup\r\n    .date()\r\n    .nullable()\r\n    .transform((curr, orig) => orig === '' ? null : curr)\r\n    .min(new Date(1900, 0, 1), 'Минимальное значение 01.01.1900')\r\n    .max(new Date(), 'Нельзя выбирать день из будущего')\r\n    .required(\"Поле 'Дата рождения' обязательное для заполнения\"),\r\n  email: yup\r\n    .string()\r\n    .nullable()\r\n    .email('Формат не соответствует электронной почте')\r\n    .max(50, 'Длина строки не должно превышать 50 символов'),\r\n  phone: yup\r\n    .string()\r\n    .nullable()\r\n    .max(20, 'Длина строки не должно превышать 20 символов'),\r\n});\r\n","import * as yup from 'yup';\r\n\r\nexport default yup.object().shape({\r\n  oldPassword: yup\r\n    .string()\r\n    .min(6, 'Минимальное количество символов для пароля 6')\r\n    .max(50, 'Пароль не может быть больше чем 50 символов')\r\n    .required('Введите текущий пароль'),\r\n  newPassword: yup\r\n    .string()\r\n    .min(6, 'Минимальное количество символов для пароля 6')\r\n    .max(50, 'Пароль не может быть больше чем 50 символов')\r\n    .required('Введите новый пароль'),\r\n  confirmedNewPassword: yup\r\n    .string()\r\n    .min(6, 'Минимальное количество символов для пароля 6')\r\n    .max(50, 'Пароль не может быть больше чем 50 символов')\r\n    .required('Введите новый пароль еще раз'),\r\n});\r\n","import React, { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { IChangePasswordFormValues } from '../../app/models/profile';\r\nimport passwordValidationScheme from '../../app/validators/passwordValidationScheme';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexFlow: 'column wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    minWidth: 300,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  helperText: {\r\n    color: 'red',\r\n  },\r\n  submitButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    width: '100%',\r\n    margin: `-${theme.spacing(2)}px 0 ${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\ninterface IProps {\r\n  callback: () => void;\r\n}\r\n\r\nconst ChangePassword: React.FC<IProps> = ({ callback }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { changePassword, loading } = rootStore.profileStore;\r\n\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const { handleSubmit, control, errors } = useForm<IChangePasswordFormValues>({\r\n    resolver: yupResolver(passwordValidationScheme),\r\n    reValidateMode: 'onBlur',\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await changePassword(data);\r\n      callback();\r\n    } catch (ex) {\r\n      if (ex && 'Message' in ex) setError(ex.Message);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={onSubmit}>\r\n      <Controller\r\n        name=\"oldPassword\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ value, onChange, onBlur }) => (\r\n          <TextField\r\n            value={value}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            label={t('COMPONENTS.CHANGE_PASSWORD.OLD_PASSWORD')}\r\n            helperText={errors?.oldPassword?.message ?? ' '}\r\n            className={classes.input}\r\n            FormHelperTextProps={{\r\n              className: classes.helperText,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        name=\"newPassword\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ value, onChange, onBlur }) => (\r\n          <TextField\r\n            value={value}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            label={t('COMPONENTS.CHANGE_PASSWORD.NEW_PASSWORD')}\r\n            helperText={errors?.newPassword?.message ?? ' '}\r\n            className={classes.input}\r\n            FormHelperTextProps={{\r\n              className: classes.helperText,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        name=\"confirmedNewPassword\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ value, onChange, onBlur }) => (\r\n          <TextField\r\n            value={value}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            label={t('COMPONENTS.CHANGE_PASSWORD.CONFIRMED_NEW_PASSWORD')}\r\n            helperText={errors?.confirmedNewPassword?.message ?? ' '}\r\n            className={classes.input}\r\n            FormHelperTextProps={{\r\n              className: classes.helperText,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n      {error && (\r\n        <Alert className={classes.alert} severity=\"error\">\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        type=\"submit\"\r\n        size=\"large\"\r\n        className={classes.submitButton}\r\n        disabled={Object.keys(errors).length > 0 || loading}\r\n      >\r\n        {t('COMMON.SAVE')}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import 'date-fns';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { IProfileFormValues } from '../../app/models/profile';\r\nimport profileValidationScheme from '../../app/validators/profileValidationScheme';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputMask from 'react-input-mask';\r\nimport UniversalDialog from '../../app/common/dialogs/UniversalDialog';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(6),\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  leftSide: {\r\n    flex: 1,\r\n    maxWidth: 400,\r\n  },\r\n  rightSide: {\r\n    flex: 2,\r\n    maxWidth: 1000,\r\n  },\r\n  formGroup: {\r\n    marginTop: 40,\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: 300,\r\n  },\r\n  helperText: {\r\n    color: 'red',\r\n    height: 50,\r\n  },\r\n  image: {\r\n    width: 280,\r\n    height: 280,\r\n    position: 'relative',\r\n    '& > img': {\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      border: '30px solid #fefefe',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: '0 auto',\r\n    },\r\n  },\r\n  addButtonImage: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n    border: `3px solid ${theme.palette.common.white}`,\r\n    transform: 'translate(-50%, 25%)',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  addButtonIcon: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  changePasswordButton: {\r\n    marginLeft: 'auto',\r\n  },\r\n  submitButton: {\r\n    margin: `${theme.spacing(2)}px auto`,\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst Profile = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { loadProfile, profile, loading, updateProfile } =\r\n    rootStore.profileStore;\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState('/assets/profile-default.png');\r\n\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const { handleSubmit, control, errors, setValue, watch } =\r\n    useForm<IProfileFormValues>({\r\n      defaultValues: {\r\n        firstname: profile?.firstname,\r\n        lastname: profile?.lastname,\r\n        middlename: profile?.middlename,\r\n        birthDate: profile !== null ? profile.birthDate : new Date(),\r\n        email: profile?.email,\r\n        phone: profile?.phone,\r\n        image: undefined,\r\n      },\r\n      resolver: yupResolver(profileValidationScheme),\r\n      reValidateMode: 'onBlur',\r\n      mode: 'onBlur',\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (profile === null) {\r\n      loadProfile();\r\n    } else {\r\n      setValue('firstname', profile.firstname);\r\n      setValue('lastname', profile.lastname);\r\n      setValue('middlename', profile.middlename);\r\n      setValue('birthDate', new Date(profile.birthDate));\r\n      setValue('email', profile.email);\r\n      setValue('phone', profile.phone);\r\n      if (profile.image !== null)\r\n        setImageSrc(\r\n          process.env.REACT_APP_BPM_API_URL_ROOT + profile.image?.url,\r\n        );\r\n    }\r\n  }, [loadProfile, profile, setValue]);\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      updateProfile(data);\r\n    } catch (ex) {\r\n      // TODO: set form errors\r\n      console.log(ex);\r\n    }\r\n  });\r\n\r\n  const imageValue = watch('image');\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">{t('COMPONENTS.PROFILE.TITLE')}</Typography>\r\n        <Tooltip\r\n          title={t('COMPONENTS.PROFILE.CHANGE_PASSWORD').toString()}\r\n          TransitionComponent={Zoom}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.changePasswordButton}\r\n            onClick={() => setModalOpen(true)}\r\n          >\r\n            <VpnKeyIcon color=\"primary\"></VpnKeyIcon>\r\n          </Button>\r\n        </Tooltip>\r\n      </div>\r\n      <form className={classes.form} onSubmit={onSubmit}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <div className={classes.leftSide}>\r\n            <div className={classes.image}>\r\n              <img\r\n                src={imageValue ? URL.createObjectURL(imageValue) : imageSrc}\r\n                alt=\"profile\"\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <Tooltip\r\n                  title={t('COMPONENTS.PROFILE.CHANGE_IMAGE').toString()}\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton className={classes.addButtonImage} component=\"span\">\r\n                    <AddIcon className={classes.addButtonIcon} />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </label>\r\n              <Controller\r\n                name=\"image\"\r\n                control={control}\r\n                defaultValue={null}\r\n                render={() => (\r\n                  <input\r\n                    id=\"image\"\r\n                    accept=\"image/*\"\r\n                    type=\"file\"\r\n                    onChange={(e) => setValue('image', e!.target!.files![0])}\r\n                    hidden\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.rightSide}>\r\n            <div className={classes.formGroup}>\r\n              <Controller\r\n                name=\"firstname\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ value, onChange, onBlur }) => (\r\n                  <TextField\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    label={t('COMMON.FIRST_NAME')}\r\n                    helperText={errors?.firstname?.message ?? ' '}\r\n                    className={classes.input}\r\n                    FormHelperTextProps={{\r\n                      className: classes.helperText,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"lastname\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ value, onChange, onBlur }) => (\r\n                  <TextField\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    label={t('COMMON.LAST_NAME')}\r\n                    helperText={errors?.lastname?.message ?? ' '}\r\n                    className={classes.input}\r\n                    FormHelperTextProps={{\r\n                      className: classes.helperText,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"middlename\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ value, onChange, onBlur }) => (\r\n                  <TextField\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    label={t('COMMON.MIDDLE_NAME')}\r\n                    helperText={errors?.middlename?.message ?? ' '}\r\n                    className={classes.input}\r\n                    FormHelperTextProps={{\r\n                      className: classes.helperText,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"birthDate\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ value, onChange, onBlur }) => (\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    inputVariant=\"outlined\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    className={classes.input}\r\n                    id=\"birth-date-picker\"\r\n                    label={t('COMMON.BIRTH_DATE')}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    helperText={errors?.birthDate?.message ?? ' '}\r\n                    FormHelperTextProps={{\r\n                      className: classes.helperText,\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"email\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ value, onChange, onBlur }) => (\r\n                  <TextField\r\n                    value={value}\r\n                    type=\"email\"\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    label={t('COMMON.EMAIL')}\r\n                    helperText={errors?.email?.message ?? ' '}\r\n                    className={classes.input}\r\n                    FormHelperTextProps={{\r\n                      className: classes.helperText,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"phone\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ value, onChange, onBlur }) => (\r\n                  <InputMask\r\n                    mask=\"8 (999) 999 99 99\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                  >\r\n                    {(inputProps: any) => (\r\n                      <TextField\r\n                        {...inputProps}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        label={t('COMMON.PHONE')}\r\n                        helperText={errors?.phone?.message ?? ' '}\r\n                        className={classes.input}\r\n                        FormHelperTextProps={{\r\n                          className: classes.helperText,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    )}\r\n                  </InputMask>\r\n                )}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                type=\"submit\"\r\n                size=\"large\"\r\n                className={classes.submitButton}\r\n                disabled={Object.keys(errors).length > 0 || loading}\r\n              >\r\n                {t('COMMON.SAVE')}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </MuiPickersUtilsProvider>\r\n      </form>\r\n      <UniversalDialog\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        title={t('COMPONENTS.PROFILE.CHANGE_PASSWORD')}\r\n        content={<ChangePassword callback={() => setModalOpen(false)} />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Profile);\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ILoanApplicationDetails } from '../../../app/models/loanApplication';\r\nimport { format } from 'date-fns';\r\n\r\n// Material UI\r\nimport { Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  backBtn: {\r\n    marginRight: theme.spacing(3) \r\n  }\r\n}));\r\n\r\ninterface IProps {\r\n  loanApplication: ILoanApplicationDetails | null;\r\n}\r\n\r\nconst TaskDetailsToolbar: React.FC<IProps> = ({ loanApplication }) => {  \r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  const createdDate = loanApplication\r\n    ? new Date(loanApplication.application.createdDate)\r\n    : null;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Button \r\n        className={classes.backBtn} \r\n        variant=\"outlined\"\r\n        onClick={() => history.goBack()}\r\n      >\r\n        {t('COMMON.BACK')}\r\n      </Button>\r\n      <Typography className={classes.title} color=\"inherit\" variant=\"h5\" component=\"div\">\r\n        {createdDate \r\n          ? t('COMPONENTS.TASK_DETAILS.TITLE').replace('{date}', format(createdDate!, 'dd.MM.yyyy'))\r\n          : t('COMPONENTS.TASK_DETAILS.DEFAULT_TITLE')}\r\n      </Typography>\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default TaskDetailsToolbar;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\ninterface IProps {\r\n  value: number;\r\n  index: number;\r\n  children?: React.ReactNode;\r\n  className?: string | undefined;\r\n}\r\n\r\nconst TabPanel: React.FC<IProps> = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={1}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabPanel;\r\n","import React from 'react';\r\nimport { ITableData, OrderDirection } from '../../models/common';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { Dictionary } from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(0, 2, 1, 2),\r\n    fontWeight: 'bold',\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: '1.8rem',\r\n    },\r\n  },\r\n  cell: {\r\n    background: '#eee',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\ninterface IProps {\r\n  title: string | null;\r\n  data: ITableData;\r\n  handleOrderingChange?: (\r\n    code: string,\r\n    orderByDirection: OrderDirection,\r\n  ) => void;\r\n}\r\n\r\nconst UniversalTable: React.FC<IProps> = ({\r\n  title,\r\n  data,\r\n  handleOrderingChange,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { header, body } = data;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        {title}\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {header.map((item, idx) => (\r\n                <TableCell\r\n                  key={idx}\r\n                  className={classes.cell}\r\n                  sortDirection={item.isOrderBy ? item.orderByDirection : false}\r\n                >\r\n                  {handleOrderingChange ? (\r\n                    <TableSortLabel\r\n                      active={item.isOrderBy}\r\n                      direction={item.orderByDirection}\r\n                      onClick={() =>\r\n                        handleOrderingChange(\r\n                          item.code,\r\n                          item.orderByDirection === 'asc' ? 'desc' : 'asc',\r\n                        )\r\n                      }\r\n                    >\r\n                      {item.name}\r\n                    </TableSortLabel>\r\n                  ) : (\r\n                    item.name\r\n                  )}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {body.map((item: Dictionary<any>, idx: number) => (\r\n              <TableRow key={idx}>\r\n                {header.map((head, index) => (\r\n                  <TableCell key={index}>{item[head.code]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversalTable;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  ICreditHistory,\r\n  ILoanApplicationDetails,\r\n  IOrganization,\r\n  IPerson,\r\n} from '../../../../app/models/loanApplication';\r\nimport UniversalTable from '../../../../app/common/tables/UniversalTable';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { isEmpty } from 'lodash';\r\nimport { format } from 'date-fns/esm';\r\nimport { ITableData, ITableHeader } from '../../../../app/models/common';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  title: {\r\n    fontWeight: 'bold',\r\n    margin: theme.spacing(2, 0, 1),\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: '1.8rem',\r\n    },\r\n  },\r\n  fieldTitle: {\r\n    fontWeight: 'bold',\r\n    margin: theme.spacing(1),\r\n  },\r\n  listItem: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  table: {\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n  pkb: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\ninterface IProps {\r\n  data: ILoanApplicationDetails;\r\n}\r\n\r\nconst ClientDetails: React.FC<IProps> = ({\r\n  data: { clientDetails, application },\r\n}) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const renderTitle = (title: string) => (\r\n    <Typography variant=\"h6\" className={classes.title}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n\r\n  const renderLine = (title: string, text?: string) => {\r\n    if (isEmpty(text)) return null;\r\n\r\n    return (\r\n      <Typography>\r\n        <span className={classes.fieldTitle}>{title}:</span>\r\n        <span>{text}</span>\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  const renderPerson = (title: string, person?: IPerson) => {\r\n    if (isEmpty(person) || person === undefined) return null;\r\n\r\n    return (\r\n      <div>\r\n        {renderTitle(title)}\r\n        {renderLine(t('COMPONENTS.CLIENT_DETAILS.FULLNAME'), person.fullName)}\r\n        {renderLine(t('COMPONENTS.CLIENT_DETAILS.CITIZENSHIP'), person.country)}\r\n        {renderLine(t('COMPONENTS.CLIENT_DETAILS.IIN'), person.identifier)}\r\n        {person.identificationDocument &&\r\n          renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.PASSPORT'),\r\n            `${person.identificationDocument.number}, ${\r\n              person.identificationDocument.issuer\r\n            }, ${format(\r\n              new Date(person.identificationDocument.dateIssue),\r\n              'dd.MM.yyyy',\r\n            )}`,\r\n          )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.ADDRESS'),\r\n          person.address?.register,\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.WORK_PHONE_NUMBER'),\r\n          person.phone.work,\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.MOBILE_PHONE_NUMBER'),\r\n          person.phone.mobile,\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.HOME_PHONE_NUMBER'),\r\n          person.phone.home,\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.BIRTH_DATE'),\r\n          format(new Date(person.birthDate), 'dd.MM.yyyy'),\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.BIRTH_PLACE'),\r\n          person.birthPlace,\r\n        )}\r\n        {renderLine(t('COMPONENTS.CLIENT_DETAILS.EDUCATION'), person.education)}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.WORK_EXPERIENCE_TOTAL'),\r\n          person.workExperience?.total,\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.WORK_EXPERIENCE_AGRICULTURE'),\r\n          person.workExperience?.agriculture,\r\n        )}\r\n        {renderLine(\r\n          t('COMPONENTS.CLIENT_DETAILS.MARRIAGE_STATUS'),\r\n          person.marriageStatus,\r\n        )}\r\n        {renderLine(t('COMPONENTS.CLIENT_DETAILS.SPOUSE'), person.spouse)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const generateCreditHistoryTableData = (\r\n    creditHistory: ICreditHistory[],\r\n  ): ITableData => {\r\n    const header: ITableHeader[] = [\r\n      {\r\n        code: 'fullName',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.CREDIT_ORGANIZATION_FULLNAME'),\r\n        isOrderBy: true,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'sum',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.CREDIT_SUM'),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'dateIssue',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.CREDIT_ISSUE_DATE'),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'period',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.CREDIT_PERIOD'),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'balance',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.CREDIT_BALANCE'),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n    ];\r\n\r\n    return {\r\n      header,\r\n      body: creditHistory,\r\n    };\r\n  };\r\n\r\n  const generateAffiliatedCompaniesTableData = (\r\n    organizations: IOrganization[],\r\n  ): ITableData => {\r\n    const header: ITableHeader[] = [\r\n      {\r\n        code: 'fullName',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.AFFILIATED_ORGANIZATION_FULLNAME'),\r\n        isOrderBy: true,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'bank_accounts',\r\n        name: t(\r\n          'COMPONENTS.CLIENT_DETAILS.AFFILIATED_ORGANIZATION_BANK_ACCOUNTS',\r\n        ),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'share_in_company',\r\n        name: t(\r\n          'COMPONENTS.CLIENT_DETAILS.AFFILIATED_ORGANIZATION_SHARE_IN_COMPANY',\r\n        ),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n      {\r\n        code: 'debts',\r\n        name: t('COMPONENTS.CLIENT_DETAILS.AFFILIATED_ORGANIZATION_DEBT_SUM'),\r\n        isOrderBy: false,\r\n        orderByDirection: 'asc',\r\n      },\r\n    ];\r\n\r\n    return {\r\n      header,\r\n      body: organizations.map((org) => ({\r\n        fullName: `${org.fullName}, ${org.address?.register}`,\r\n        bank_accounts: org.bankAccounts\r\n          .map((ba) => `БИК: ${ba.bic}, счет: ${ba.number}`)\r\n          .join('; '),\r\n        share_in_company: org.shareInCapital,\r\n        debts: org.debts\r\n          .map((d) => `БИК: ${d.bic}, cумма: ${d.debt}`)\r\n          .join('; '),\r\n      })),\r\n    };\r\n  };\r\n\r\n  // TODO: Split into seperate components\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12} sm={6}>\r\n        <div>\r\n          {renderTitle(t('COMPONENTS.CLIENT_DETAILS.ORGANIZATION'))}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.ORGANIZATION_FULLNAME'),\r\n            clientDetails.organization.fullName,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.REGISTER_ADDRESS'),\r\n            clientDetails.organization.address?.register,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.FACT_ADDRESS'),\r\n            clientDetails.organization.address?.fact,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.WORK_PHONE_NUMBER'),\r\n            clientDetails.organization.phone?.work,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.MOBILE_PHONE_NUMBER'),\r\n            clientDetails.organization.phone?.mobile,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.HOME_PHONE_NUMBER'),\r\n            clientDetails.organization.phone?.home,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.FAX'),\r\n            clientDetails.organization.fax,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.EMAIL'),\r\n            clientDetails.organization.email,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.IIN_BIN'),\r\n            clientDetails.organization.identifier,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.OKED'),\r\n            clientDetails.organization.oked.join(', '),\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.ORGANIZATION_TYPE'),\r\n            clientDetails.organization.organizationType,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.OWNERSHIP_FORM'),\r\n            clientDetails.organization.ownershipForm,\r\n          )}\r\n          {renderLine(\r\n            t('COMPONENTS.CLIENT_DETAILS.PARENT_COMPANY'),\r\n            clientDetails.organization.parent,\r\n          )}\r\n          {clientDetails.organization.identificationDocument &&\r\n            renderLine(\r\n              t('COMPONENTS.CLIENT_DETAILS.IDENTIFICATION_DOCUMENT'),\r\n              `${clientDetails.organization.identificationDocument.number}, ${clientDetails.organization.identificationDocument.issuer}, ${clientDetails.organization.identificationDocument.dateIssue}`,\r\n            )}\r\n          {clientDetails.organization.registrationDocument &&\r\n            renderLine(\r\n              t('COMPONENTS.CLIENT_DETAILS.REGISTRATION_DOCUMENT'),\r\n              `${clientDetails.organization.registrationDocument.number}, ${clientDetails.organization.registrationDocument.issuer}, ${clientDetails.organization.registrationDocument.dateIssue}`,\r\n            )}\r\n        </div>\r\n\r\n        {renderPerson(\r\n          t('COMPONENTS.CLIENT_DETAILS.BENEFICIARY'),\r\n          clientDetails.beneficiary,\r\n        )}\r\n        {renderPerson(\r\n          t('COMPONENTS.CLIENT_DETAILS.REPRESENTATIVE'),\r\n          clientDetails.representative,\r\n        )}\r\n\r\n        {clientDetails.contacts.length > 0 && (\r\n          <div>\r\n            {renderTitle(t('COMPONENTS.CLIENT_DETAILS.CONTACTS'))}\r\n            {clientDetails.contacts.map((contact, i) => {\r\n              return (\r\n                <div key={i} className={classes.listItem}>\r\n                  {renderLine(\r\n                    t('COMPONENTS.CLIENT_DETAILS.FULLNAME'),\r\n                    contact.fullName,\r\n                  )}\r\n                  {renderLine(\r\n                    t('COMPONENTS.CLIENT_DETAILS.REGISTER_ADDRESS'),\r\n                    contact.address?.register,\r\n                  )}\r\n                  {renderLine(\r\n                    t('COMPONENTS.CLIENT_DETAILS.PHONE'),\r\n                    contact.phone?.mobile,\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        {clientDetails.organization.bankAccounts.length > 0 && (\r\n          <div>\r\n            {renderTitle(t('COMPONENTS.CLIENT_DETAILS.BANK_ACCOUNTS'))}\r\n            {clientDetails.organization.bankAccounts.map((bankAccount, i) => {\r\n              return (\r\n                <div key={i} className={classes.listItem}>\r\n                  {renderLine(\r\n                    t('COMPONENTS.CLIENT_DETAILS.BANK_ACCOUNT_BIC'),\r\n                    bankAccount.bic,\r\n                  )}\r\n                  {renderLine(\r\n                    t('COMPONENTS.CLIENT_DETAILS.BANK_ACCOUNT_NUMBER'),\r\n                    bankAccount.number,\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        {renderPerson(t('COMPONENTS.CLIENT_DETAILS.HEAD'), clientDetails.head)}\r\n\r\n        {renderPerson(\r\n          t('COMPONENTS.CLIENT_DETAILS.BOOKER'),\r\n          clientDetails.booker,\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <div className={classes.table}>\r\n          <UniversalTable\r\n            title={t('COMPONENTS.CLIENT_DETAILS.CREDIT_HISTORY')}\r\n            data={generateCreditHistoryTableData(\r\n              clientDetails.organization.creditHistory,\r\n            )}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div className={classes.table}>\r\n          <UniversalTable\r\n            title={t('COMPONENTS.CLIENT_DETAILS.AFFILIATED_ORGANIZATIONS')}\r\n            data={generateAffiliatedCompaniesTableData(\r\n              clientDetails.organization.affiliatedOrganizations,\r\n            )}\r\n          />\r\n        </div>\r\n      </Grid>\r\n\r\n      {application.pkbFile && (\r\n        <Grid item xs={12} className={classes.pkb}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Файл из ПКБ:\r\n          </Typography>\r\n          <Link\r\n            href={`/${application.pkbFile.url}`}\r\n            download={application.pkbFile.filename}\r\n          >\r\n            {application.pkbFile.filename}\r\n          </Link>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { IAssetsTable } from '../../../../app/models/loanApplication';\r\nimport UniversalTable from '../../../../app/common/tables/UniversalTable';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n  },\r\n}))\r\n\r\ninterface IProps {\r\n  data: IAssetsTable\r\n}\r\n\r\nconst Assets: React.FC<IProps> = ({ data }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <UniversalTable title={t('COMPONENTS.ASSETS.LAND')} data={data.land} handleOrderingChange={(code, direction) => console.log(code, direction)} />\r\n      <UniversalTable title={t('COMPONENTS.ASSETS.BIO')} data={data.bio} handleOrderingChange={(code, direction) => console.log(code, direction)} />\r\n      <UniversalTable title={t('COMPONENTS.ASSETS.FLORA')} data={data.flora} handleOrderingChange={(code, direction) => console.log(code, direction)} />\r\n      <UniversalTable title={t('COMPONENTS.ASSETS.TECH')} data={data.tech} handleOrderingChange={(code, direction) => console.log(code, direction)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Assets\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { IContractsTable } from '../../../../app/models/loanApplication';\r\nimport UniversalTable from '../../../../app/common/tables/UniversalTable';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n  },\r\n}))\r\n\r\ninterface IProps {\r\n  data: IContractsTable\r\n}\r\n\r\nconst Contracts: React.FC<IProps> = ({ data }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <UniversalTable title={t('COMPONENTS.CONTRACTS.CALCULATOR')} data={data.calculators} handleOrderingChange={(code, direction) => console.log(code, direction)} />\r\n      <UniversalTable title={t('COMPONENTS.CONTRACTS.TECHNIQUES')} data={data.techniques} handleOrderingChange={(code, direction) => console.log(code, direction)} />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contracts\r\n","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { IFileListItem } from '../../../../app/models/common';\r\nimport { RootStoreContext } from '../../../../app/stores/rootStore';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 400\r\n  },\r\n}))\r\n\r\ninterface IProps {\r\n  data: IFileListItem[]\r\n}\r\n\r\nconst Documents: React.FC<IProps> = ({ data }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { uploadDocuments, uploadingFiles, removeDocument } = rootStore.loadApplicationDetailsStore;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List dense>\r\n        {data.map((file, idx) => (\r\n          <ListItem key={idx}>\r\n            <ListItemText>\r\n              <Link href={`/${file.url}`} download={file.filename}>{file.filename}</Link>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <IconButton \r\n                color=\"secondary\"\r\n                disabled={uploadingFiles}\r\n                onClick={async () => await removeDocument(file.id)}\r\n              >\r\n                <HighlightOffIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <div>\r\n        <input\r\n          color=\"primary\"\r\n          type=\"file\"\r\n          onChange={e => uploadDocuments(e.target.files)}\r\n          id=\"icon-button-file\"\r\n          multiple\r\n          hidden\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <Button\r\n            variant=\"contained\"\r\n            component=\"span\"\r\n            color=\"primary\"\r\n            disabled={uploadingFiles}\r\n          >\r\n            {t('COMMON.UPLOAD')}<AttachFileIcon />\r\n          </Button>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Documents);\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns';\r\nimport { IFinAnalysis, VerificationStatus } from '../../../../app/models/loanApplication';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n  resultsList: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  result: {\r\n    marginLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  list: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    margin: 0\r\n  },\r\n  listItem: {\r\n    width: 360\r\n  },\r\n  success: {\r\n    color: green[500]\r\n  }\r\n}));\r\n\r\ninterface IProps {\r\n  data: IFinAnalysis;\r\n}\r\n\r\nconst FinAnalysis: React.FC<IProps> = ({ data }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  if (data == null)\r\n    return null;\r\n\r\n  \r\n  const renderIcon = (status: VerificationStatus | null) => {\r\n    switch(status) {\r\n      case VerificationStatus.Correct:\r\n        return <CheckIcon className={classes.success} />;\r\n      case VerificationStatus.Critical:\r\n      case VerificationStatus.Minor:\r\n        return <RemoveIcon color=\"error\" />\r\n      case VerificationStatus.ServiceUnavailable:\r\n        return <NotInterestedIcon color=\"action\" />\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography className={classes.title}>\r\n        {t('COMPONENTS.FIN_ANALYSIS.DATE_OF_INSPECTION')}: <Typography component=\"span\">{format(new Date(data.dateOfInspection), 'dd-MM-yyyy')}</Typography>\r\n      </Typography>\r\n      <Typography className={classes.title}>\r\n        {t('COMPONENTS.FIN_ANALYSIS.OVERALL_STATUS')}: <Typography component=\"span\">{data.overallStatus}</Typography>\r\n      </Typography>\r\n      <div className={classes.resultsList}>\r\n        {data.results.map((result, index) => (\r\n          <div className={classes.result} key={index}>\r\n            <Typography className={classes.title}>{result.blockName}</Typography>\r\n            <List className={classes.list}>\r\n              {result.subjects.map((subject, idx) => (\r\n                <ListItem key={idx} className={classes.listItem}>\r\n                  <ListItemText primary={subject.name} secondary={subject.statusName} />\r\n                  <ListItemIcon>\r\n                    {renderIcon(subject.status)}\r\n                  </ListItemIcon>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinAnalysis;\r\n","import React, { useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ILoanApplicationDetails } from '../../../app/models/loanApplication';\r\nimport TabPanel from '../../../app/common/tabs/TabPanel';\r\nimport ClientDetails from './tap-panel/ClientDetails';\r\nimport Assets from './tap-panel/Assets';\r\nimport Contracts from './tap-panel/Contracts';\r\nimport Documents from './tap-panel/Documents';\r\nimport FinAnalysis from './tap-panel/FinAnalysis';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    flexGrow: 1,\r\n  },\r\n  tabs: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabPanel: {\r\n    height: 'calc(100vh - 200px)',\r\n    overflowY: 'auto',\r\n    padding: theme.spacing(2)\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  loanApplication: ILoanApplicationDetails | null;\r\n}\r\n\r\nconst TaskDetailsInfo: React.FC<IProps> = ({ loanApplication }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"data types tabs\"\r\n          classes={{\r\n            flexContainer: classes.tabs\r\n          }}\r\n          centered\r\n        >\r\n          <Tab label={t('COMPONENTS.TASK_DETAILS_INFO.CLIENT_DATA')} {...a11yProps(0)} />\r\n          <Tab label={t('COMPONENTS.TASK_DETAILS_INFO.ASSETS')} {...a11yProps(1)} />\r\n          <Tab label={t('COMPONENTS.TASK_DETAILS_INFO.EQUIPMENT')} {...a11yProps(2)} />\r\n          <Tab label={t('COMPONENTS.TASK_DETAILS_INFO.DOCUMENTS')} {...a11yProps(3)} />\r\n          <Tab label={t('COMPONENTS.TASK_DETAILS_INFO.FIN_ANALYSIS')} {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0} className={classes.tabPanel}>\r\n        {loanApplication !== null && <ClientDetails data={loanApplication} />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1} className={classes.tabPanel}>\r\n        {loanApplication !== null && <Assets data={loanApplication.assets} />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2} className={classes.tabPanel}>\r\n        {loanApplication !== null && <Contracts data={loanApplication.contracts} />}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3} className={classes.tabPanel}>\r\n        {loanApplication !== null && <Documents data={loanApplication.documents} />}\r\n      </TabPanel>    \r\n      <TabPanel value={value} index={4} className={classes.tabPanel}>\r\n        {loanApplication !== null && <FinAnalysis data={loanApplication.finAnalysis} />}\r\n      </TabPanel>    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(TaskDetailsInfo);\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  actions: {\r\n    float: 'right',\r\n    padding: theme.spacing(2, 0, 1)\r\n  },\r\n  btn: {\r\n    margin: theme.spacing(0, 2)\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  text: string;\r\n  onReject: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  onAccept: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  acceptButtonDisabled?: boolean;\r\n}\r\n\r\nconst ConfirmForm: React.FC<IProps> = ({ text, onReject, onAccept, acceptButtonDisabled }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <Typography color=\"textSecondary\">{text}</Typography>\r\n      <div className={classes.actions}>\r\n        <Button className={classes.btn} onClick={onReject} color=\"default\" variant=\"contained\">\r\n          {t('COMMON.NO')}\r\n        </Button>\r\n        <Button \r\n          onClick={onAccept} \r\n          className={classes.btn} \r\n          color=\"primary\" \r\n          variant=\"contained\" \r\n          disabled={acceptButtonDisabled}\r\n          autoFocus>\r\n          {t('COMMON.YES')}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmForm;\r\n","import React from 'react';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  setFiles: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  accept?: string;\r\n  value: FileList;\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\nconst FileInput: React.FC<IProps> = ({ setFiles, accept, value, size }) => {\r\n  const classes = useStyles();\r\n\r\n  const id = `icon-button-file-${Math.random()}`;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        {Array.from(value).map((file: File, idx: number) => (\r\n          <Typography key={idx}>{file.name}</Typography>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <input\r\n          color=\"primary\"\r\n          accept={accept}\r\n          type=\"file\"\r\n          onChange={setFiles}\r\n          id={id}\r\n          multiple\r\n          hidden\r\n        />\r\n        <label htmlFor={id}>\r\n          <Button\r\n            variant=\"contained\"\r\n            component=\"span\"\r\n            color=\"default\"\r\n            size={size ? size : 'medium'}\r\n          >\r\n            <AttachFileIcon />\r\n          </Button>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileInput\r\n","import React from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { ICompleteTaskFormValues } from '../../../models/loanApplication';\r\nimport FileInput from '../../inputs/FileInput';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    [theme.breakpoints.up('md')]: {\r\n      minWidth: 500\r\n    }\r\n  },\r\n  submitBtn: {\r\n    margin: `${theme.spacing(2)}px auto`,\r\n    display: 'block'\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  handleFormSubmit: (data: Partial<ICompleteTaskFormValues>) => Promise<void>;\r\n  defaultValues: Partial<ICompleteTaskFormValues>;\r\n  isDecline?: boolean;\r\n}\r\n\r\nconst DeclineForm: React.FC<IProps> = ({ handleFormSubmit, defaultValues, isDecline = true }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const { handleSubmit, control, errors, setValue, formState: { isSubmitting } } = useForm<Partial<ICompleteTaskFormValues>>({\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  const onSubmit = async (data: Partial<ICompleteTaskFormValues>) => {\r\n    await handleFormSubmit(data);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n      <Controller \r\n        name='comment'\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => \r\n          <TextField \r\n            value={value}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            label={isDecline ? t('COMMON.COMMENT') : t('COMMON.NOTES')}\r\n            variant=\"outlined\" \r\n            rows={4}\r\n            error={!!errors?.comment}\r\n            helperText={errors?.comment?.message}\r\n            multiline\r\n            fullWidth\r\n          />\r\n        }\r\n      />\r\n      <Controller \r\n        name=\"files\"\r\n        control={control}\r\n        render={({ value }) => (\r\n          <FileInput \r\n            setFiles={(e) => setValue('files', e.target.files)}\r\n            value={value}\r\n          />\r\n        )}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submitBtn}\r\n        disabled={isSubmitting}\r\n      >\r\n        {t('COMMON.SEND')}\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DeclineForm\r\n","import React, { useContext, useState, useEffect, Fragment } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../stores/rootStore';\r\nimport { IFormSettingsButton } from '../../../models/loanApplication';\r\nimport UniversalDialog from '../../dialogs/UniversalDialog';\r\nimport ConfirmForm from '../comfirm-form/ConfirmForm';\r\nimport DeclineForm from '../decline-form/DeclineForm';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dictionary } from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface IProps {\r\n  formId: string;\r\n  buttons: IFormSettingsButton[];\r\n}\r\n\r\nconst UserReportFormActions: React.FC<IProps> = ({ formId, buttons }) => {\r\n  const classes = useStyles();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    userReportFormValues,\r\n    completeTask,\r\n    completeTaskLoading,\r\n    setLoanApplicationTaskStatusId,\r\n  } = rootStore.loadApplicationDetailsStore;\r\n\r\n  const [modalOpen, setModalOpen] = useState<Dictionary<boolean>>({});\r\n\r\n  useEffect(() => {\r\n    const modalsStates = buttons.reduce((prev, current) => {\r\n      return {\r\n        ...prev,\r\n        [current.taskStatusId]: false,\r\n      };\r\n    }, {});\r\n\r\n    setModalOpen(modalsStates);\r\n  }, [buttons]);\r\n\r\n  const isButtonDisabled = (isApply: boolean) => {\r\n    const checkboxValues = Object.values(userReportFormValues[formId].fields);\r\n    if (checkboxValues.length === 0) return false;\r\n\r\n    return isApply\r\n      ? !checkboxValues.every((x) => x === true)\r\n      : checkboxValues.every((x) => x === true);\r\n  };\r\n\r\n  const renderDialog = (button: IFormSettingsButton) => {\r\n    return button.hasForm ? (\r\n      <UniversalDialog\r\n        open={modalOpen[button.taskStatusId] ?? false}\r\n        onClose={() =>\r\n          setModalOpen((state) => ({ ...state, [button.taskStatusId]: false }))\r\n        }\r\n        title={button.dialogTitle}\r\n        content={\r\n          <DeclineForm\r\n            handleFormSubmit={(data) => completeTask(formId, data)}\r\n            defaultValues={{ comment: '', files: [] }}\r\n            isDecline={false}\r\n          />\r\n        }\r\n      />\r\n    ) : (\r\n      <UniversalDialog\r\n        open={modalOpen[button.taskStatusId] ?? false}\r\n        onClose={() =>\r\n          setModalOpen((state) => ({ ...state, [button.taskStatusId]: false }))\r\n        }\r\n        title={button.dialogTitle}\r\n        content={\r\n          <ConfirmForm\r\n            text={button.dialogMessage}\r\n            onReject={() =>\r\n              setModalOpen((state) => ({\r\n                ...state,\r\n                [button.taskStatusId]: false,\r\n              }))\r\n            }\r\n            onAccept={() => completeTask(formId, {})}\r\n            acceptButtonDisabled={completeTaskLoading}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {buttons.map((button, idx) => (\r\n        <Fragment key={idx}>\r\n          <Button\r\n            color={button.isApply ? 'primary' : 'default'}\r\n            variant=\"contained\"\r\n            disabled={isButtonDisabled(button.isApply)}\r\n            onClick={() => {\r\n              setLoanApplicationTaskStatusId(button.taskStatusId);\r\n              setModalOpen((state) => ({\r\n                ...state,\r\n                [button.taskStatusId]: true,\r\n              }));\r\n            }}\r\n          >\r\n            {button.name}\r\n          </Button>\r\n          {renderDialog(button)}\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UserReportFormActions);\r\n","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RootStoreContext } from '../../../../stores/rootStore';\r\nimport { IFormSettingsField, IUserReportCommentFormValues } from '../../../../models/loanApplication';\r\nimport FileInput from '../../../inputs/FileInput';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  commentInputWrapper: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  filesInputWrapper: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  commentInput: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\ninterface IProps {\r\n  formId: string;\r\n  field: IFormSettingsField;\r\n  fetchComments: (page: number, pageLimit: number, isNew?: boolean) => Promise<void>;\r\n}\r\n\r\nconst CommentsForm: React.FC<IProps> = ({ formId, field, fetchComments }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    userReportFormValues,\r\n    addComment\r\n  } = rootStore.loadApplicationDetailsStore;\r\n\r\n  const { control, handleSubmit, watch, setValue, formState: { isSubmitting }, reset } = useForm<IUserReportCommentFormValues>({\r\n    defaultValues: {\r\n      comment: '',\r\n      files: []\r\n    }\r\n  });\r\n\r\n  const watchComment = watch('comment', '');\r\n\r\n  const onSubmit = async (data: IUserReportCommentFormValues) => {\r\n    await addComment(field.id, data.comment, data.files)\r\n      .finally(async () => await fetchComments(1, 1, true).finally(reset));\r\n  }\r\n  \r\n  return (\r\n    <Fade in={!userReportFormValues[formId].fields[field.id]}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={classes.commentInputWrapper}>\r\n          <Controller \r\n            name='comment'\r\n            control={control}\r\n            render={({ onChange, value }) => (\r\n              <TextField\r\n                value={value}\r\n                onChange={onChange}\r\n                className={classes.commentInput}\r\n                label={t('COMMON.COMMENT')}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                multiline\r\n              />\r\n            )}\r\n          />\r\n          <Fade in={watchComment !== ''}>\r\n            <IconButton\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n            >\r\n              <SendIcon />\r\n            </IconButton>\r\n          </Fade>\r\n        </div>\r\n        <div className={classes.filesInputWrapper}>\r\n          <Controller \r\n            name=\"files\"\r\n            control={control}\r\n            render={({ value }) => (\r\n              <FileInput \r\n                key={field.id}\r\n                setFiles={(e) => setValue('files', e.target.files)}\r\n                value={value}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </form>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default observer(CommentsForm);\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../../../stores/rootStore';\r\nimport { ICommentListItem } from '../../../../models/common';\r\nimport UniversalDialog from '../../../dialogs/UniversalDialog';\r\nimport ConfirmForm from '../../comfirm-form/ConfirmForm';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  commentsListWrapper: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  date: {\r\n    float: 'right',\r\n    display: 'block'\r\n  },\r\n  listItemText: {\r\n    marginRight: theme.spacing(1.5)\r\n  },\r\n  files: {\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  linearProgress: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\ninterface IProps {  \r\n  comments: ICommentListItem[];\r\n  commentsLoading: boolean;\r\n  isReadOnly: boolean;\r\n  setComments: (value: React.SetStateAction<ICommentListItem[]>) => void;\r\n  setCommentsCount: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst CommentsList: React.FC<IProps> = ({ comments, commentsLoading, setComments, setCommentsCount, isReadOnly }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    removeComment\r\n  } = rootStore.loadApplicationDetailsStore;\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [selectedCommentId, setSelectedCommentId] = useState('');\r\n\r\n  const onRemove = async () => {\r\n    setIsDeleting(true);\r\n\r\n    await removeComment(selectedCommentId)\r\n      .finally(() => {\r\n        setComments(comments.filter(x => x.commentId !== selectedCommentId));\r\n        setCommentsCount(count => count - 1);\r\n        setDeleteDialogOpen(false);\r\n        setIsDeleting(false);\r\n      });\r\n  }\r\n\r\n  if (commentsLoading)\r\n    return <LinearProgress className={classes.linearProgress} />\r\n\r\n  return (\r\n    <Fade in={!commentsLoading}>\r\n      <List className={classes.commentsListWrapper}>\r\n        {comments.map((comment, idx) => (\r\n          <Fragment key={idx}>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemText\r\n                className={classes.listItemText}\r\n                secondary={comment.text}\r\n              >\r\n                <span>{comment.author}</span>\r\n                <span className={classes.date}>{format(new Date(comment.date), 'dd-MM-yyyy HH:mm')}</span>\r\n              </ListItemText>\r\n              {!isReadOnly && <ListItemSecondaryAction>\r\n                <IconButton \r\n                  edge=\"end\" \r\n                  aria-label=\"delete\"\r\n                  onClick={() => {\r\n                    setSelectedCommentId(comment.commentId);\r\n                    setDeleteDialogOpen(true);\r\n                  }}\r\n                >\r\n                  <DeleteIcon color=\"secondary\" />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>}\r\n            </ListItem>\r\n            <List component=\"div\" disablePadding>\r\n              {comment.files.map((file, index) => (\r\n                <ListItem key={index} button className={classes.files}>\r\n                  <ListItemIcon>\r\n                    <InsertDriveFileIcon color=\"primary\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Link href={`/${file.url}`} download={file.filename}>{file.filename}</Link>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider />\r\n        </Fragment>\r\n        ))}\r\n        {!isReadOnly && <UniversalDialog \r\n          open={deleteDialogOpen}\r\n          onClose={() => setDeleteDialogOpen(false)}\r\n          title={t('COMPONENTS.COMMENTS_LIST.DELETE_DIALOG_TITLE')}\r\n          content={<ConfirmForm  \r\n            text={t('COMPONENTS.COMMENTS_LIST.DELETE_DIALOG_SUBTITLE')}\r\n            onReject={() => setDeleteDialogOpen(false)}\r\n            onAccept={onRemove}\r\n            acceptButtonDisabled={isDeleting}\r\n          />}\r\n        />}\r\n      </List>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default observer(CommentsList);\r\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RootStoreContext } from '../../../stores/rootStore';\r\nimport { IFormSettingsField } from '../../../models/loanApplication';\r\nimport CommentsForm from './comments/CommentsForm';\r\nimport CommentsList from './comments/CommentsList';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ICommentListItem } from '../../../models/common';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  commentsCount: {\r\n    marginLeft: theme.spacing(2),\r\n    textDecoration: 'underline',\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\ninterface IProps {\r\n  formId: string;\r\n  field: IFormSettingsField;\r\n  isReadOnly: boolean;\r\n}\r\n\r\nconst UserReportFormComments: React.FC<IProps> = ({ formId, field, isReadOnly }) => {  \r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { getComments } = rootStore.loadApplicationDetailsStore;\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [pageLimit] = useState(3);\r\n  const [commentsLoading, setCommentsLoading] = useState(false);\r\n  const [comments, setComments] = useState<ICommentListItem[]>([]);\r\n  const [commentsCount, setCommentsCount] = useState(field.countOfComments);\r\n  \r\n  const fetchComments = useCallback(async (page: number, pageLimit: number, isNew: boolean = false) => {\r\n    setCommentsLoading(true);\r\n\r\n    const commentsResult = await getComments(field.id, page, pageLimit).finally(() => setCommentsLoading(false));\r\n    \r\n    if (commentsResult !== null) {\r\n      if (page === 1 && pageLimit === 3) {\r\n        setComments(commentsResult.list);\r\n      } else {\r\n        setComments(comments => isNew \r\n          ? [ ...comments, ...commentsResult.list ]\r\n          : [ ...commentsResult.list, ...comments ]);\r\n      }\r\n\r\n      setCommentsCount(commentsResult.count);\r\n      }\r\n    }, [field.id, setComments, setCommentsCount, getComments]);\r\n  \r\n    useEffect(() => {\r\n      fetchComments(page, pageLimit);\r\n    }, [page, pageLimit, fetchComments]);\r\n    \r\n  return (\r\n    <div>\r\n      {commentsCount > comments.length ? (\r\n        <Typography \r\n          onClick={() => commentsCount > pageLimit \r\n            ? setPage(page + 1) \r\n            : fetchComments(1, pageLimit)}\r\n          variant=\"caption\" \r\n          component=\"div\"\r\n          className={classes.commentsCount} \r\n        >\r\n          {t('COMPONENTS.USER_REPORT_FORM.VIEW_ALL_COMMENTS')} ({commentsCount - comments.length})\r\n        </Typography>) \r\n        : null\r\n      }\r\n      <CommentsList \r\n        comments={comments}\r\n        commentsLoading={commentsLoading}\r\n        isReadOnly={isReadOnly} \r\n        setComments={setComments} \r\n        setCommentsCount={setCommentsCount} \r\n      />\r\n      {!isReadOnly && <CommentsForm formId={formId} field={field} fetchComments={fetchComments} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(UserReportFormComments);\r\n","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../stores/rootStore';\r\nimport { IFormSettings } from '../../../models/loanApplication';\r\nimport UserReportFormActions from './UserReportFormActions';\r\nimport UserReportFormComments from './UserReportFormComments';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  formLabel: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  formGroupItem: {\r\n    margin: theme.spacing(2, 0, 1),\r\n  },\r\n  formControlLabel: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\ninterface IProps {\r\n  settings: IFormSettings;\r\n}\r\n\r\nconst UserReportForm: React.FC<IProps> = ({ settings }) => {\r\n  const classes = useStyles();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { userReportFormValues, setUserReportFormCheckboxValue } =\r\n    rootStore.loadApplicationDetailsStore;\r\n\r\n  return (\r\n    <div>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        {settings.fields.length > 0 && (\r\n          <FormLabel className={classes.formLabel} component=\"legend\">\r\n            {settings.subtitle}\r\n          </FormLabel>\r\n        )}\r\n        <FormGroup>\r\n          {settings.fields.map((field, idx) => (\r\n            <div key={idx} className={classes.formGroupItem}>\r\n              <FormControlLabel\r\n                className={classes.formControlLabel}\r\n                control={\r\n                  <Checkbox\r\n                    checked={userReportFormValues[settings.id].fields[field.id]}\r\n                    color=\"primary\"\r\n                    disabled={settings.isReadOnly}\r\n                    onChange={(_, val) =>\r\n                      setUserReportFormCheckboxValue(settings.id, field.id, val)\r\n                    }\r\n                  />\r\n                }\r\n                label={field.name}\r\n                labelPlacement=\"start\"\r\n              />\r\n              <UserReportFormComments\r\n                formId={settings.id}\r\n                field={field}\r\n                isReadOnly={settings.isReadOnly}\r\n              />\r\n            </div>\r\n          ))}\r\n        </FormGroup>\r\n      </FormControl>\r\n      {!settings.isReadOnly && (\r\n        <UserReportFormActions\r\n          formId={settings.id}\r\n          buttons={settings.buttons}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UserReportForm);\r\n","import React, { useContext, Fragment, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../../../app/stores/rootStore';\r\nimport Spinner from '../../../../app/layout/Spinner';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    minHeight: 400\r\n  },\r\n  listItem: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  files: {\r\n    paddingLeft: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst ExpertiseResults = () => {\r\n  const classes = useStyles();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { \r\n    getExpertiseResults, \r\n    expertiseResults, \r\n    expertiseResultsLoading\r\n  } = rootStore.loadApplicationDetailsStore;\r\n\r\n  useEffect(() => {\r\n    getExpertiseResults();\r\n  }, [getExpertiseResults])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {\r\n        expertiseResultsLoading\r\n          ? (<Spinner />)\r\n          : (\r\n            <List dense>\r\n              {expertiseResults.map((result, idx) => (\r\n                <Fragment key={idx}>\r\n                  <ListItem className={classes.listItem}>\r\n                    <ListItemText\r\n                      secondary={result.comment}\r\n                    >\r\n                      {result.roleName}\r\n                    </ListItemText>\r\n                  </ListItem>\r\n                  <List component=\"div\" disablePadding>\r\n                    {result.files.map((file, index) => (\r\n                      <ListItem key={index} button className={classes.files}>\r\n                        <ListItemIcon>\r\n                          <InsertDriveFileIcon color=\"primary\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText>\r\n                          <Link href={`/${file.url}`} download={file.filename}>{file.filename}</Link>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Fragment>\r\n              ))}\r\n            </List>\r\n          )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(ExpertiseResults);\r\n","import React, { useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ILoanApplicationDetails } from '../../../app/models/loanApplication';\r\nimport TabPanel from '../../../app/common/tabs/TabPanel';\r\nimport UserReportForm from '../../../app/common/forms/user-report-form/UserReportForm';\r\nimport ExpertiseResults from './tap-panel/ExpertiseResults';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabs: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabPanel: {    \r\n    height: 'calc(100vh - 200px)',\r\n    overflowY: 'auto',\r\n    padding: theme.spacing(2)\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  loanApplication: ILoanApplicationDetails | null;\r\n}\r\n\r\nconst TaskDetailsForm: React.FC<IProps> = ({ loanApplication }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const renderTabs = () => {    \r\n    if (loanApplication !== null) {\r\n      return loanApplication.forms.map((form, idx) => (\r\n        <Tab key={idx} label={form.title} {...a11yProps(idx)} />\r\n      ));\r\n    }\r\n  }\r\n\r\n  const renderForms = () => {    \r\n    if (loanApplication !== null) {\r\n      return loanApplication.forms.map((form, idx) => (\r\n        <TabPanel key={idx} value={value} index={idx} className={classes.tabPanel}>\r\n          <UserReportForm settings={form} />\r\n        </TabPanel>\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar} >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"desktop\"\r\n          aria-label=\"data types tabs\"\r\n          classes={{\r\n            flexContainer: classes.tabs\r\n          }}\r\n        >\r\n          {renderTabs()}\r\n          {loanApplication !== null && \r\n            <Tab \r\n              label={t('COMPONENTS.TASK_DETAILS_FORM.EXPERTISE')} \r\n              {...a11yProps(loanApplication.forms.length)} \r\n            />}\r\n        </Tabs>\r\n      </AppBar>\r\n      {renderForms()}\r\n      {loanApplication !== null && \r\n        <TabPanel \r\n          value={value} \r\n          index={loanApplication.forms.length} \r\n          className={classes.tabPanel}\r\n        >\r\n          <ExpertiseResults />\r\n        </TabPanel>}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(TaskDetailsForm);\r\n","import React, { useEffect, useContext, Fragment } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useParams } from \"react-router-dom\";\r\nimport TaskDetailsToolbar from './TaskDetailsToolbar';\r\nimport TaskDetailsInfo from './TaskDetailsInfo';\r\nimport TaskDetailsForm from './TaskDetailsForm';\r\nimport Spinner from '../../../app/layout/Spinner';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n// Material UI\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minHeight: `90vh`\r\n  }\r\n}))\r\n\r\ninterface TParams { \r\n  loanApplicationTaskId: string;\r\n};\r\n\r\nconst TaskDetails = () => {\r\n  const classes = useStyles();\r\n  const { loanApplicationTaskId } = useParams<TParams>();\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { setLoanApplicationTaskId, getLoanApplicationDetails, detailsAreLoading, loanApplication } = rootStore.loadApplicationDetailsStore;\r\n\r\n  useEffect(() => {\r\n    setLoanApplicationTaskId(loanApplicationTaskId);\r\n    getLoanApplicationDetails(loanApplicationTaskId);\r\n  }, [setLoanApplicationTaskId, getLoanApplicationDetails, loanApplicationTaskId]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {detailsAreLoading \r\n        ? <Spinner />\r\n        : (\r\n          <Fragment>\r\n            <TaskDetailsToolbar loanApplication={loanApplication} />\r\n            <Grid container spacing={2}>\r\n              <Grid item md={8}>\r\n                <TaskDetailsInfo loanApplication={loanApplication} />\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <TaskDetailsForm loanApplication={loanApplication} />\r\n              </Grid>\r\n            </Grid>\r\n          </Fragment>\r\n        )}      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(TaskDetails);\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n  Theme,\r\n} from '@material-ui/core/styles';\r\nimport { lightTheme, darkTheme } from '../config/theme';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Sidebar from './Sidebar';\r\nimport Topbar from './Topbar';\r\nimport Overlay from './Overlay';\r\nimport Spinner from './Spinner';\r\nimport NotFound from './NotFound';\r\nimport TaskList from '../../features/tasks/list/TaskList';\r\nimport Profile from '../../features/user/Profile';\r\nimport TaskDetails from '../../features/tasks/details/TaskDetails';\r\nimport { Theme as MyTheme } from '../models/common';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  app: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px`,\r\n  },\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em',\r\n      height: '0.4em',\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'rgba(0,0,0,.1)',\r\n      outline: '1px solid #ccc',\r\n    },\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { theme, setAppLoaded, access_token, refresh_token, appLoaded } =\r\n    rootStore.commonStore;\r\n  const { refreshToken, fillDisplayNameFromToken } = rootStore.userStore;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (access_token && refresh_token) {\r\n      const decoded: any = jwt_decode(access_token);\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded.exp < currentTime) refreshToken();\r\n      else {\r\n        fillDisplayNameFromToken(access_token, refresh_token);\r\n      }\r\n    }\r\n    setAppLoaded();\r\n  }, [\r\n    access_token,\r\n    refresh_token,\r\n    refreshToken,\r\n    setAppLoaded,\r\n    fillDisplayNameFromToken,\r\n  ]);\r\n\r\n  if (!appLoaded) return <Spinner />;\r\n\r\n  return (\r\n    <MuiThemeProvider\r\n      theme={createMuiTheme(theme === MyTheme.dark ? darkTheme : lightTheme)}\r\n    >\r\n      <CssBaseline />\r\n      <ToastContainer position=\"bottom-right\" />\r\n      <Topbar />\r\n      <PrivateRoute path=\"/\" component={Sidebar} />\r\n      <div className={classes.app}>\r\n        <Switch>\r\n          <Route exact path=\"/not-found\" component={NotFound} />\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <PrivateRoute exact path=\"/tasklist\" component={TaskList} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/tasklist/:loanApplicationTaskId\"\r\n            component={TaskDetails}\r\n          />\r\n        </Switch>\r\n      </div>\r\n      <Overlay />\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop: React.FC = ({ children, location: { pathname } }: any) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport App from './app/layout/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\n\r\nimport './app/scss/_base.scss';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <ScrollToTop>\r\n      <App />\r\n    </ScrollToTop>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}