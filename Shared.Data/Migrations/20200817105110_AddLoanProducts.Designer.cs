// <auto-generated />
using System;
using Agro.Shared.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Agro.Shared.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200817105110_AddLoanProducts")]
    partial class AddLoanProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agro.Shared.Data.Context.BasePledge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BpmNokId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ChargeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasLegalTransactionsAndClaims")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCorrectEgov")
                        .HasColumnType("bit");

                    b.Property<string>("IsCorrectEgovNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrectLaw")
                        .HasColumnType("bit");

                    b.Property<string>("IsCorrectLawNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEncumbered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEncumberedAtFund")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNokAssessment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Kato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LiquidityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NokOrManualSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PledgeType")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChargeeId");

                    b.HasIndex("LiquidityId");

                    b.ToTable("BasePledge");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Chargee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DocumentDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DocumentDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentIssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIOKaz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIORus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrectEgov")
                        .HasColumnType("bit");

                    b.Property<string>("IsCorrectEgovNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrectLaw")
                        .HasColumnType("bit");

                    b.Property<string>("IsCorrectLawNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegFlatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegHouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegStreetKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chargees");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.CreditSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DicProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxMonth")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxSumAnchor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercentEffSocial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentEffStandart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentSocial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentStandart")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DicProductId");

                    b.ToTable("CreditSources");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.DicProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicProducts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicActivityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicActivityTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientLocationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicClientLocationTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientSegment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicClientSegmentes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicClientTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicLoanFinancingSources");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicLoanProducts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanPurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicLoanPurposes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanRepaymentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DicLoanRepaymentTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Liquidity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Coefficient")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PledgeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Liquidities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanGracePeriodCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fee")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainDebt")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurposeId");

                    b.ToTable("LoanGracePeriodConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMaxAmountCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientLocationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientLocationTypeId");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.ToTable("LoanMaxAmountConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMinAmountCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanProductActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("LoanProductActivityId");

                    b.ToTable("LoanMinAmountConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanProductActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ProductId");

                    b.ToTable("LoanProductActivities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRateCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientSegmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PercentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientSegmentId");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.ToTable("LoanRateConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyFee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RepaymentTypeFeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RepaymentTypeFeeId");

                    b.ToTable("LoanRepaymentFrequencyFee");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyOD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RepaymentTypeODId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RepaymentTypeODId");

                    b.ToTable("LoanRepaymentFrequencyOD");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanTermCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Term")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurposeId");

                    b.ToTable("LoanTermConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.OutService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Error")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OutServices");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Audience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhysical")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasswordTryCount")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignXml")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.BasePledge", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Chargee", "Chargee")
                        .WithMany("BasePledges")
                        .HasForeignKey("ChargeeId");

                    b.HasOne("Agro.Shared.Data.Context.Liquidity", "Liquidity")
                        .WithMany("BasePledges")
                        .HasForeignKey("LiquidityId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.CreditSource", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.DicProduct", "DicProduct")
                        .WithMany()
                        .HasForeignKey("DicProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanGracePeriodCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanPurpose", "DicLoanPurpose")
                        .WithMany()
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMaxAmountCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientLocationType", "DicClientLocationType")
                        .WithMany()
                        .HasForeignKey("ClientLocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMinAmountCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.LoanProductActivity", "LoanProductActivity")
                        .WithMany()
                        .HasForeignKey("LoanProductActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanProductActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicActivityType", "DicActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRateCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientSegment", "DicClientSegment")
                        .WithMany()
                        .HasForeignKey("ClientSegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyFee", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanRepaymentType", "DicLoanRepaymentTypeFee")
                        .WithMany()
                        .HasForeignKey("RepaymentTypeFeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyOD", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanRepaymentType", "DicLoanRepaymentTypeOD")
                        .WithMany()
                        .HasForeignKey("RepaymentTypeODId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanTermCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientType", "DicClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanPurpose", "DicLoanPurpose")
                        .WithMany()
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RolePermission", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.UserRole", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
