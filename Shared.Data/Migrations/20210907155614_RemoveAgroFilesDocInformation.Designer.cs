// <auto-generated />
using System;
using Agro.Shared.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Agro.Shared.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210907155614_RemoveAgroFilesDocInformation")]
    partial class RemoveAgroFilesDocInformation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agro.Shared.Data.Context.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Fact")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Register")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.AffiliatedCompanies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DolyaVacionernomKapitale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationNameAndAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServingBanksAndAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SsudnyiZadolzhennostWithBanks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientDetailsId");

                    b.ToTable("AffiliatedCompanieses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.AppActives", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("AppActives");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.AppTechnics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("AppTechnicses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonalityId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.BioActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppActivesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EdinicaForDead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdinicaForLive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppActivesId");

                    b.ToTable("BioActivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AlterBranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeGBDFL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeKato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeOCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("RegionId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Calculator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CoFinancing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId")
                        .IsUnique()
                        .HasFilter("[ContractId] IS NOT NULL");

                    b.ToTable("Calculators");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ClientCredits", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateCreditDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpiredDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SumdDebt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnredeemedDebt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientDetailsId");

                    b.ToTable("ClientCredits");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ClientDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BINForJuridical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountBIK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountIIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BeneficiaryIsResident")
                        .HasColumnType("bit");

                    b.Property<string>("BeneficiaryPassportCreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryPassportIssuerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryPassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterBornDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterBornPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterFIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterFaktAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterHomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterPassportCreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterPassportIssuerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterPassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterRegisterAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuhgalterWorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLicoBIK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacticalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IINForIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JuridicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderBornDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderBornPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderFIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderFaktAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderHomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderRegistrAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderWorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MainActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MentorHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumberRegisterEvidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obrazovanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnershipTypeForJuristical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportCreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportIssuerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterEvidenceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemeinoePolozhenie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StazhRaboty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StazhSelhoz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuprugName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("ClientDetails");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ClientProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("AtsId")
                        .HasColumnType("bigint");

                    b.Property<string>("BirthPlaceKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlaceRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cato")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ChildrenCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("ClientTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyActivity")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("CompanyNdc")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompanyRegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyRegisterNumber")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CompanySerialNumber")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentBeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentOrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<long?>("GeonimId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("Level1")
                        .HasColumnType("bigint");

                    b.Property<long?>("Level2")
                        .HasColumnType("bigint");

                    b.Property<long?>("Level3")
                        .HasColumnType("bigint");

                    b.Property<long?>("Level4")
                        .HasColumnType("bigint");

                    b.Property<long?>("Level5")
                        .HasColumnType("bigint");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationAddressDistrictCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationAddressKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationAddressRegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationAddressRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("ClientProfiles");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleControlsFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("RoleControlsFieldId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppTechnicsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppTechnicsId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.CreditCommitteeResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Accept")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("UserId");

                    b.ToTable("CreditCommitteeResults");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.CreditHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonalityId");

                    b.ToTable("CreditHistory");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dept", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonalityId");

                    b.ToTable("PersonalityDepts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.DicProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicProducts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAccessories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DicTechTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DicTechTypeId");

                    b.ToTable("DicAccessorieses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicActivityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code1c")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicActivityTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAffiliation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DicAffiliations");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAffiliationRelationship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AffiliationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AffiliationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AffiliationId");

                    b.HasIndex("AffiliationTypeId");

                    b.ToTable("DicAffiliationRelationships");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAffiliationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeAFN2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeKazAgro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicAffiliationTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAgriculturalMachineryPurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicAgriculturalMachineryPurpose");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BIK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentSystemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicBanks");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClassificationSubtitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocClassificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParagraphNumber")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocClassificationId");

                    b.ToTable("DicClassificationSubtitles");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicClientCategories");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientLocationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicClientLocationTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientSegment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicClientSegmentes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClientType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicClientTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCommercialObjectName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicCommercialОbjectName");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCommercialObjectPurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicCommercialОbjectPurpose");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCommercialObjectType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicCommercialОbjectType");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicCountries");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCountryProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("DicCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DicProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DicTechModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.HasIndex("DicCountryId");

                    b.HasIndex("DicProviderId");

                    b.HasIndex("DicTechModelId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicCountryProviders");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCountryTechModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("DicCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DicTechModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DicCountryId");

                    b.HasIndex("DicTechModelId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicCountryTechModels");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicDecision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicDecisions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicDocClassification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParagraphNumber")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicDocClassifications");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicDocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicDocumentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb5701f8-c3c3-444d-b9e3-c601b66f8d19"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = 1,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Анықталмаған",
                            NameRu = "Не определен",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("069ced37-3155-48a7-855a-25b2c4a2cc4c"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = 2,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Идентифицирующий",
                            NameRu = "Идентифицирующий",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("e4672721-4794-423b-adcc-fcdcfa95017d"),
                            Code = "3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = 3,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Тіркеу туралы",
                            NameRu = "Регистрационный",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("a1d306c4-8724-4254-9571-7fea556aac0b"),
                            Code = "4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = 4,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "License",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("c081be33-a850-4a4c-a2b8-99e6486e7dae"),
                            Code = "5",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = 5,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "VatCertificate",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicEquipmentPurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicEquipmentPurpose");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicFileType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicFileTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicFirstDocType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicFirstDocTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicGuaranteeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicGuaranteeType");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicKato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ab")
                        .HasColumnType("int");

                    b.Property<int>("Cd")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeOld")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ef")
                        .HasColumnType("int");

                    b.Property<int>("Hij")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OblastId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("DicKato");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLandPurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicLandPurpose");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLandType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicLandTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21854d74-6899-4216-a3e1-6537dc977586"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Посевная площадь",
                            NameRu = "Посевная площадь",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6c293f35-6171-43b1-868a-67632db8d1a4"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Пастбище",
                            NameRu = "Пастбище",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("422adcdf-e13d-441e-a4aa-c88fdc741457"),
                            Code = "3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Прочие земли",
                            NameRu = "Прочие земли",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLivestockType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicLivestockTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39420e10-9f02-476e-9825-cb5bb723f6d7"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Ірі-қара",
                            NameRu = "КРС",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8e357937-2187-4bc6-a86c-9e1027e8a00e"),
                            Code = "101",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Сиыр",
                            NameRu = "Коровы",
                            ParentId = new Guid("39420e10-9f02-476e-9825-cb5bb723f6d7"),
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("d42d930f-516f-4878-9ebb-b6840004f9fd"),
                            Code = "102",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Бұқалар",
                            NameRu = "Быки-производители",
                            ParentId = new Guid("39420e10-9f02-476e-9825-cb5bb723f6d7"),
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("19de03b5-a84d-45dc-9144-ec12bcb65229"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жылқылар",
                            NameRu = "Лошади",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("38906768-e79a-42a6-ab41-6edc04a45ab6"),
                            Code = "201",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жеребцы-производели",
                            NameRu = "Жеребцы-производели",
                            ParentId = new Guid("19de03b5-a84d-45dc-9144-ec12bcb65229"),
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("c64ce880-75f5-4945-baf7-ce9d386aa124"),
                            Code = "202",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Конематки",
                            NameRu = "Конематки",
                            ParentId = new Guid("19de03b5-a84d-45dc-9144-ec12bcb65229"),
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("75c47257-4c30-4766-9d7c-eca44cd5246f"),
                            Code = "3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "МРС",
                            NameRu = "МРС",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("103eec83-a1fc-4aed-9f40-006eefe5560f"),
                            Code = "301",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Бараны-производители",
                            NameRu = "Бараны-производители",
                            ParentId = new Guid("75c47257-4c30-4766-9d7c-eca44cd5246f"),
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6130aa9f-e554-4a58-8dbf-d87cda176b5c"),
                            Code = "302",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Овцематки",
                            NameRu = "Овцематки",
                            ParentId = new Guid("75c47257-4c30-4766-9d7c-eca44cd5246f"),
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicLoanFinancingSources");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanHistoryStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicLoanHistoryStatuses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DicLoanTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DicLoanTypeId");

                    b.ToTable("DicLoanProducts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanPurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicLoanPurposes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanRepaymentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicLoanRepaymentTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicLoanTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("763b5ce2-7013-481c-a7d2-d237a4793035"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "ЛИЗИНГ",
                            NameRu = "ЛИЗИНГ",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("fa1fbb94-e3a3-4482-970b-379ef3450b19"),
                            Code = "1.1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Стандартный лизинг",
                            NameRu = "Стандартный лизинг",
                            Sort = 0,
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("74e65f85-7ec4-4909-8dc9-de53fe9455ef"),
                            Code = "1.2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Экспресс лизинг",
                            NameRu = "Экспресс лизинг",
                            Sort = 0,
                            Value = 2
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicMariageStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicMariageStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3528f2e8-478a-45bf-9271-26fcf09c7a5b"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Бойдақ",
                            NameRu = "Холост",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("b5a5a1cf-b18d-4d2e-9f4e-e6c840a43419"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Неке құрған",
                            NameRu = "Состоит в браке",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicNok", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CooperationAgreement")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("DicNoks");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicOKED", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicOKED");

                    b.HasData(
                        new
                        {
                            Id = new Guid("102a2954-ea3e-4e86-aea9-a43e8516e372"),
                            Code = "0111",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Дәнді дақылдарды (күріштен басқа), бұршақ және майлы дақылдарды өсіру",
                            NameRu = "Выращивание зерновых (кроме риса), бобовых и масличных культур",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8e27ebdf-16ea-4376-b74f-011c87a1877f"),
                            Code = "0113",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Көкөністер, бақша дақылдарын, тамыр жемістілер мен түйнек жемістілерді өсіру",
                            NameRu = "Выращивание овощей, бахчевых, корнеплодов и клубнеплодов",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicOrganizationAndLegalForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicOrganizationAndLegalForms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31045f1d-e216-4724-b733-0c813458df47"),
                            Code = "78",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Индивидуальное предпринимательство (личное)",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("d0fd8c31-85c6-4c1e-8c19-9c889bb30f54"),
                            Code = "79",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Индивидуальное предпринимательство на основе совместного предпринимательства",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("761db84d-fca9-4259-a877-1b191064a392"),
                            Code = "99",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Физическое лицо",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("aa7dfc1a-f9c7-4421-9442-5c7e2d7d039f"),
                            Code = "10",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Государственные предприятия",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("3d037d07-88e2-4526-92fd-cbc9b448da7e"),
                            Code = "11",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Государственные предприятия на праве хозяйственного ведения",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("633d6f99-eafc-4cf0-8c5a-2370281c06e0"),
                            Code = "12",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Государственные предприятия на праве оперативного управления (казенные)",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("c2aa4f5c-1ff6-47af-8e34-fa13d0fbed43"),
                            Code = "99",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "ХТ",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("c1f24c5e-7486-4bd6-8090-5f65c4adb99d"),
                            Code = "18",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Полные товарищества",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("8eade30a-1320-4154-bc6e-e7a9b02f7268"),
                            Code = "19",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Коммандитные товарищества",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("d2bb8c4b-bdee-4243-9f51-acae44eb2b6f"),
                            Code = "20",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Товарищества с ограниченной ответственностью",
                            Sort = 0,
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("a558fb37-9629-46c7-a166-e412d5b68c8b"),
                            Code = "21",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Товарищества с дополнительной ответственностью",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("f3ece3a8-467e-4a12-88ff-5951019bbf88"),
                            Code = "24",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Акционерные общества",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("acc57629-9cba-4d9d-ab00-463ca6a67021"),
                            Code = "46",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Другая организационно-правовая форма",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("697855da-0e5b-4330-a726-92e549b9627a"),
                            Code = "27",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Производственные кооперативы",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("05ecbbfc-c105-4c2a-ac03-29771bdaa214"),
                            Code = "35",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Учреждения",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("365d1398-7ecc-466a-b29b-f873b91b0723"),
                            Code = "36",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Общественные объединения",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("c5113802-4685-4e58-8b02-ece7855936e7"),
                            Code = "37",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Потребительские кооперативы",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("13fc0db5-b864-4003-91f3-38c40c75c28b"),
                            Code = "38",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Фонды",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("bf201f21-e129-428b-b64c-f5e769b56598"),
                            Code = "39",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Религиозные объединения",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("5e3a4716-0300-44f1-b39a-2dc9f009b9b9"),
                            Code = "40",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Объединения юридических лиц в форме ассоциаций",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("b1c33fc0-91fa-4126-b4c7-eb3137c8e005"),
                            Code = "52",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Сельскохозяйственные товарищества",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("4c4ca9c9-0678-4f9d-bce7-0b172c2525ef"),
                            Code = "99",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "ЛП",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("fcd4a268-39c0-41e7-b78c-8327ff3606f0"),
                            Code = "99",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Простое товарищество",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("e48790c7-c7e1-4368-97d0-6dba8b7800d5"),
                            Code = "50",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "ИП (совместное) - Предпринимательство супругов",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("c7a713d5-46b3-4019-8682-5abe54779263"),
                            Code = "51",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "ИП (совместное) - Семейное предпринимательство",
                            Sort = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = new Guid("9614b496-8fac-4764-aea1-a8ca47776a93"),
                            Code = "53",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Иная организационно-правовая форма некоммерческой организации",
                            Sort = 0,
                            Value = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicOrganizationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicOrganizationTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e042625a-7e7b-45ab-8c3d-27aae5a7ff8c"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Заңды тұлға",
                            NameRu = "Юридическое лицо",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("c1a9c736-2e5a-483c-9bf7-ff809d8efd60"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жеке кәсіпкер",
                            NameRu = "Индивидуальный предприниматель",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("e449c89b-3845-4081-aa8c-a6de6fad72fe"),
                            Code = "3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Крестьяндық шаруашылық",
                            NameRu = "Крестьянское хозяйство",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8a3307a1-1b2e-4528-9c1f-1c82fb45e178"),
                            Code = "4",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Фермерлік шаруашылық",
                            NameRu = "Фермерское хозяйство",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicOwnershipForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicOwnershipForms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("173ba8e8-4f8b-40d6-802c-86987f9d1d29"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жеке меншік",
                            NameRu = "Индивидуальная собственность",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("c51c579e-a95a-440f-acf3-19ce2cb4e9bc"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Ұжымдық меншік",
                            NameRu = "Коллективная собственность",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicOwnershipType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicOwnershipTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80f0bb4b-1742-47e3-9edd-14ac1a0885d9"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Меншік",
                            NameRu = "Собственность",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("64767e74-6f0d-40b6-97e5-4ed609286204"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жалға алу",
                            NameRu = "Аренда",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicPledgeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicPledgeTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicProviders");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdministrativeCenterKk")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AdministrativeCenterRu")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicRegions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicRelationWithCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicRelationWithCompany");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53145abc-a5b4-4e2a-8a8f-64bc353fd5f2"),
                            Code = "51",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Связан не исп",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("28d70007-cbf2-4ca1-8ad7-87380c3df261"),
                            Code = "50",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Не связан",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("69ac17aa-13f4-4464-9a73-6cf1119c130d"),
                            Code = "12",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо или руководящий работник банка (организации, осуществляющей отд",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("97250ced-612d-4dd7-a6f6-b57a40e4edc8"),
                            Code = "13",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Близкий родственник должностного лица или руководящего работника банка",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("444dd655-4a34-4063-95a1-fbe7f5d12834"),
                            Code = "16",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Крупный участник банка",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("e9470491-55a2-4eb1-a653-984491c9a38d"),
                            Code = "18",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо крупного участника банка",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("251967fa-ac3b-4c10-8ebb-2230f3d26ed7"),
                            Code = "06",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Близкий родственник должностного лица крупного участника банка",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("99f737cf-d0a8-4d5d-b2ad-22a39465195a"),
                            Code = "20",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором лицо, состоящее в близком родстве, браке, а также св",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("0f4298e1-4177-4306-af65-e20643db1d35"),
                            Code = "22",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо юридического лица, по отношению к которому банк является крупны",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("4753ac66-3704-4f9e-af2c-5271d77fa971"),
                            Code = "23",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Близкий родственник должностного лица юридического лица, по отношению к ко-тором",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("cd231ca4-d76f-47ee-935e-cb11a53edf56"),
                            Code = "21",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором главный бухгалтер филиала банка  (организации, осуще",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("534123ef-9881-441a-9ea2-624afa68ba3c"),
                            Code = "42",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Крупный участник крупного участника банка, банковского холдинга",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("b95aafab-e501-46a4-8b6a-9b6993040a1e"),
                            Code = "44",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, состоящее в близком родстве, браке, а также свойстве с лицом, являющимся к",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("71de6cd0-353a-4894-a75a-14be1f764a0c"),
                            Code = "41",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, состоящее в близком родстве, браке, а также свойстве с лицом, являющимся г",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("28cfdc7c-995a-41bb-9a57-1502b7d8748d"),
                            Code = "46",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, состоящее в близком родстве, браке, а также свойстве с лицом, являющимся д",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("401ff648-d1f7-4778-9cf4-f075df8265b5"),
                            Code = "45",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, состоящее в близком родстве, браке, а также свойстве с лицом, являющимся к",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6297e3d4-f6a3-4698-8bc6-a06bc5c120b3"),
                            Code = "39",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, состоящее в близком родстве, браке, а также свойстве с лицом, являющимся п",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("f64a44d3-0ba6-41c7-8b89-afbe726ca051"),
                            Code = "35",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Главный бухгалтер филиала банка  (организации, осуществляющей отдельные виды бан",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("eea13ad1-280d-4ace-8ddb-9afde9a8db4c"),
                            Code = "43",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо крупного акционера организации, осуществляющей отдельные виды б",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("81216e55-db6e-4ddc-af1b-95e64457c93d"),
                            Code = "78",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо юридического лица, которое контролируется должностным лицом бан",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("17b7b008-b96e-4a02-ba6e-7913bfa72dd0"),
                            Code = "79",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо юридического лица, которое контролируется должностным лицом бан",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("baf15e3c-9423-4786-9c8b-41338530cd7a"),
                            Code = "77",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо юридического лица, которое контролируется крупным акционером ор",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("4d05865a-8417-46e7-9aee-b9cf71b5eab5"),
                            Code = "76",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Должностное лицо юридического лица, которое контролируется крупным участником ба",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("0124802c-f147-4504-b0fa-bbac7054deda"),
                            Code = "80",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Иное лицо, связанное с банком (организацией, осуществляющей отдельные виды банко",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("9b2e900d-208d-44c3-aaee-55607a1c34a3"),
                            Code = "59",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Крупный акционер (участник) организации, осуществляющей отдельные виды банковски",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("421b39d2-17cf-480f-bc71-d00a4c717dc4"),
                            Code = "60",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Крупный участник (акционер) крупного участника (акционера) организации, осуществ",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("9d95dec1-fb27-404a-85e8-2099dc6dc3e9"),
                            Code = "66",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("ff98992d-f404-4025-9262-ac6c859aca76"),
                            Code = "67",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("7cfe085b-f7d2-43a2-b743-189572168b0e"),
                            Code = "68",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("927f02be-7198-4a1d-996a-72d042a37e00"),
                            Code = "69",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("d13bde36-4612-4fd9-8e73-588ef8b84c54"),
                            Code = "70",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("9040b8a5-90e6-48de-9845-0b2d20c7cef2"),
                            Code = "71",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("3f12e6f2-4d35-4255-a7dd-0ec5973c2741"),
                            Code = "72",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6aca42c6-99bf-4c5c-87a7-9304faab71f7"),
                            Code = "73",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8473c3ba-37a3-45b5-b439-dec78dca145e"),
                            Code = "74",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("a846b2ec-02a9-4872-8bdf-a2bd16a83caf"),
                            Code = "75",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, которое самостоятельно или совместно со своими аффилиированными лицами вла",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("f64e5fd1-eee3-4f25-b170-a10411a2f73d"),
                            Code = "65",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Лицо, связанное с банком  (организации, осуществляющей отдельные виды банковских",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6ad3241e-d59e-4a8c-bab7-6d9c72ae1531"),
                            Code = "34",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Первый руководитель филиала банка  (организации, осуществляющей отдельные виды б",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("235e210a-efb3-4948-8fe1-2101e921d2fc"),
                            Code = "56",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором лицо, состоящее в близком родстве, браке, а также св",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("2eccc65f-a08d-4435-9672-b10767d6be28"),
                            Code = "54",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором должностное лицо крупного участника банка (организац",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("d5049a82-1230-47c7-901a-a25d8223a829"),
                            Code = "47",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором должностное лицо или руководящий работник банка (орг",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("17fa4259-0515-4c4d-88f6-8cf96c740880"),
                            Code = "24",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором крупный участник банка является крупным участником (",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("e885ad91-d564-4541-8678-a4453944a715"),
                            Code = "52",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором лицо, состоящее в близком родстве, браке, а также св",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("f47074e1-554f-484d-8077-022f0e76272d"),
                            Code = "53",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором лицо, состоящее в близком родстве, браке, а также св",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("d824f24f-9436-44fb-9dca-ebee194ced74"),
                            Code = "57",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором лицо, состоящее в близком родстве, браке, а также св",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("a34f4e99-1201-4571-a83f-101984e06266"),
                            Code = "48",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, в котором первый руководитель филиала банка  (организации, осу",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("4f2088fa-ed57-4a38-9298-d048b25ee38e"),
                            Code = "63",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, которое контролируется лицом, являющимся должностным лицом бан",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("bae8172d-6159-459f-b7f9-ca5e8c0ea908"),
                            Code = "62",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, которое контролируется лицом, являющимся крупным акционером (у",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("4223ef34-beff-4d70-b166-a2e0df19b88e"),
                            Code = "61",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, которое контролируется лицом, являющимся крупным участником ба",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("2db87d97-d704-42cd-ab9f-263ac59d762b"),
                            Code = "64",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, которое совместно с банком (организации, осуществляющей отдель",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("5e9911c7-d9ff-4b14-950c-9c25cf0f58bb"),
                            Code = "58",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юридическое лицо, по отношению к которому банк  (организация, осуществляющая отд",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicStockType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicStockType");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicSubjectOfEntrepreneur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicSubjectOfEntrepreneur");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70cd9aa2-da90-40b0-b62e-d1c26ffcd2fd"),
                            Code = "Малый бизнес",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Малый бизнес",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("0182d1e3-d239-4f24-9ab2-696bf41abe3d"),
                            Code = "Средний бизнес",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Средний бизнес",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8dc3046c-1d81-48b1-8b08-6d333378fe2e"),
                            Code = "Крупный бизнес",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Крупный бизнес",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTaskStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicTaskStatuses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTaxTreatment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicTaxTreatments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5586a71e-1277-4e90-9004-baad6745373a"),
                            Code = "Общеустановленный режим",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Общеустановленный режим",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6e4e04a8-c8b2-4faf-9a23-9a7d97dc60d0"),
                            Code = "Упрощенный режим",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Упрощенный режим",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTechModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DicTechProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DicTechProductId");

                    b.ToTable("DicTechModels");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTechProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DicAccessoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DicTechTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DicAccessoriesId");

                    b.HasIndex("DicTechTypeId");

                    b.ToTable("DicTechProducts");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTechType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DicLoanProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("TechTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DicLoanProductId");

                    b.HasIndex("ParentId");

                    b.ToTable("DicTechTypes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTransportBodyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicTransportBodyType");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTransportFuel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicTransportFuel");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTransportSteeringWheel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicTransportSteeringWheel");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTransportType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicTransportType");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTypeOfRelationWithCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicTypeOfRelationWithCompany");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1afc962-9bf0-4421-8298-d055a1cc5806"),
                            Code = "000000001",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Супруг(а)",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("c061fd0d-15f5-4647-a1d3-bcfccb2bc231"),
                            Code = "000000002",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Получатель отчета",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("3f83c606-2623-42fd-b283-9e715b035e4d"),
                            Code = "000000003",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Учредитель/Участник",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("4afb7a4a-932c-4c61-956d-1d1f9d58500e"),
                            Code = "000000004",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Юрист",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("d348ed82-6ad8-4660-8844-1aa4c9c056e5"),
                            Code = "000000005",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Член совета директоров",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("b651fa25-bca1-40be-80a0-4df61e72c95d"),
                            Code = "000000006",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Помощник администратора",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("f66f263a-bc09-43a3-b968-5d8dced67a52"),
                            Code = "000000007",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Конкурент",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("b935c06b-e47a-48d7-8503-edb54e0439d1"),
                            Code = "000000008",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Инвестор",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("bb3fb840-94d3-44ed-a080-fc9fd1e04b8d"),
                            Code = "000000009",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Связанный филиал",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("744e3f2f-81b0-4612-9404-5f38b0fff5d6"),
                            Code = "000000010",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Партнер",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("584a502d-8bc0-4a50-893b-347c2a4d6f35"),
                            Code = "000000011",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Личный помощник",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("cec13040-cf0f-4dd8-b179-4e52bff32a0b"),
                            Code = "000000012",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Относится к",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("df0cca7f-0a9f-49d3-a31c-2bf206210d4d"),
                            Code = "000000013",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Источник влияния",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("f75c4816-48e1-44e9-b71a-dc75033ada5a"),
                            Code = "000000014",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Финансирующая компания",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("bb70353f-7547-49ba-ac7a-cb610377dc16"),
                            Code = "000000015",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Другое",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("6394b7ab-dc12-4832-8524-4886d9353f60"),
                            Code = "000000016",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Подчиненный",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8dfcd4dc-e072-4330-b5bf-4a0722d18a6f"),
                            Code = "000000017",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Аффилированные",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("9057aba8-ab78-4702-92dc-b659b1349291"),
                            Code = "000000018",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Не указано",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("1f8251bd-8dfb-440b-8dfc-b16aadb40d0a"),
                            Code = "000000019",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Получатель счета",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("84ac8ab6-9d69-4b3d-ad59-c3b5ae64db82"),
                            Code = "000000020",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Плательщик",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("b4814c99-cfdf-4ac6-a961-b3a887c21134"),
                            Code = "000000021",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Proxy User",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("18cf36a5-e5f7-422c-96e3-43b0be6649b9"),
                            Code = "000000022",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Student",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("f9e7adf5-31e6-437a-9c7f-ad254d290d56"),
                            Code = "000000023",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Staff",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("8008987f-12e9-4b75-a8e7-e24db0a86d14"),
                            Code = "000000024",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Faculty",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("83eae627-2161-4630-b575-3a2719225d82"),
                            Code = "000000025",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Alumni",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("03313dcf-b5ff-4000-b6c3-9cadf9588ccc"),
                            Code = "000000026",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Parents",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("d8a6e535-236d-41a8-8537-6307274ee1fd"),
                            Code = "000000027",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Secondary",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("79883ab5-31a1-4009-81a2-55d80ba4a469"),
                            Code = "000000028",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Boss",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("69f5c23b-1900-4254-ae81-d5bb5fac448d"),
                            Code = "000000029",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Guardian",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("35d567b5-3d9d-4772-a70c-d512a0fd235a"),
                            Code = "000000030",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Joint",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("688e34a5-5bbc-4be5-ad3a-c765448ac948"),
                            Code = "000000031",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "PLS",
                            Sort = 0
                        },
                        new
                        {
                            Id = new Guid("66b7c5d2-70f6-4b20-93f2-88f67dd4f6bf"),
                            Code = "000000032",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "PMS",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicWallMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DicWallMaterial");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicWarningClassification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassificationSubtitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationSubtitleId");

                    b.ToTable("DicWarningClassifications");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ExpertiseResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DecisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExpertiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DecisionId");

                    b.HasIndex("ExpertiseId");

                    b.HasIndex("UserId");

                    b.ToTable("ExpertiseResults");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Affiliation")
                        .HasColumnType("int");

                    b.Property<Guid?>("AffiliationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Aliment")
                        .HasColumnType("int");

                    b.Property<double>("AnnualPay")
                        .HasColumnType("float");

                    b.Property<bool>("AnnualPaySuccess")
                        .HasColumnType("bit");

                    b.Property<int>("Bankrupt")
                        .HasColumnType("int");

                    b.Property<double>("CountDPDPastInToYears")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ExistDPDPastInToYears")
                        .HasColumnType("bit");

                    b.Property<bool>("ExistenceOfAmountDPD")
                        .HasColumnType("bit");

                    b.Property<int>("FalseBusiness")
                        .HasColumnType("int");

                    b.Property<int>("GKBReuslt")
                        .HasColumnType("int");

                    b.Property<bool>("HasSpecialRelations")
                        .HasColumnType("bit");

                    b.Property<int>("Inactive")
                        .HasColumnType("int");

                    b.Property<bool?>("IsASA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAffiliated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManyChildren")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LostPeople")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pedophily")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("SumOverdueAmount")
                        .HasColumnType("float");

                    b.Property<int>("TaxArrear")
                        .HasColumnType("int");

                    b.Property<int>("TaxesBankrupt")
                        .HasColumnType("int");

                    b.Property<int>("TerrorList")
                        .HasColumnType("int");

                    b.Property<int>("WantedIncome")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AffiliationId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("FinAnalyses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysisIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FinAnalysisId");

                    b.ToTable("FinAnalysisIncomes");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysisLoanPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FinAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinInstitut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Payments")
                        .HasColumnType("float");

                    b.Property<double>("PeriodPayments")
                        .HasColumnType("float");

                    b.Property<string>("PeriodPaymentsName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinAnalysisId");

                    b.ToTable("FinAnalysisLoanPayments");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysisQueueTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("FinAnalysisQueueTasks");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FloraActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppActivesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormaPoseva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanningPosevSquare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceRealization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urozh1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urozh2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urozh3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urozh5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zatraty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppActivesId");

                    b.ToTable("FloraActivities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FloraCulture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DicRegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urozh5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("normaVyseva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zatratyNa1Ga")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DicRegionId");

                    b.ToTable("FloraCultures");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.JuristResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FixReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WarningClassificationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("WarningClassificationId");

                    b.ToTable("JuristResults");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LandActivities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppActivesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandSquare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppActivesId");

                    b.ToTable("LandActivities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CliLegalCommentRk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CliLegalCommentVnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CliLegalResultRk")
                        .HasColumnType("bit");

                    b.Property<bool>("CliLegalResultVnd")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ClientSegmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DicLoanTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JuristComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LoanProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PledgeComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProcessInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Step1")
                        .HasColumnType("bit");

                    b.Property<bool>("Step2")
                        .HasColumnType("bit");

                    b.Property<bool>("Step3")
                        .HasColumnType("bit");

                    b.Property<bool>("Step4")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientSegmentId");

                    b.HasIndex("DicLoanTypeId");

                    b.HasIndex("LoanProductId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplicationHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DecisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FactEndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DecisionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("LoanApplicationHistories");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplicationTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DecisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FactEndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaskStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DecisionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("LoanApplicationTasks");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.FloraActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("FloraCultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<decimal>("PlannedSquare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceRealization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SeedingRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FloraCultureId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("FloraActivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.FloraProductivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("FloraActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<decimal?>("Value")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FloraActivityId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("FloraProductivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.LandActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("LandTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("OwnershipTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Square")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LandTypeId");

                    b.HasIndex("OwnershipTypeId");

                    b.ToTable("LandActivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.LivestockActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("LivePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LiveWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("LivestockTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<decimal>("SlaughterPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SlaughterWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LivestockTypeId");

                    b.ToTable("LivestockActivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.TechnicActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("CountOfCorrect")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime>("DateIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPledged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("PledgeDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("TechnicActivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Details", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("HasBeneficiary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanApplicationDetails");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.DetailsPersonality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("DetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PersonalityType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetailsId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonalityId");

                    b.ToTable("LoanApplicationDetailsPersonalities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanGracePeriodCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fee")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainDebt")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurposeId");

                    b.ToTable("LoanGracePeriodConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMaxAmountCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientLocationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientLocationTypeId");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.ToTable("LoanMaxAmountConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMinAmountCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanProductActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("LoanProductActivityId");

                    b.ToTable("LoanMinAmountConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanProductActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ProductId");

                    b.ToTable("LoanProductActivities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRateCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientSegmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PercentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientSegmentId");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.ToTable("LoanRateConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyFee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RepaymentTypeFeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RepaymentTypeFeeId");

                    b.ToTable("LoanRepaymentFrequencyFee");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyOD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RepaymentTypeODId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RepaymentTypeODId");

                    b.ToTable("LoanRepaymentFrequencyOD");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanTermCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Term")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("FinancingSourceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurposeId");

                    b.ToTable("LoanTermConditions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AffiliatedOrganizatonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsAffiliated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("LegalFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid?>("OrganizationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OwnershipFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Parent")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ShareInCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SubjectOfEntrepreneurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaxTreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LegalFormId");

                    b.HasIndex("OrganizationTypeId");

                    b.HasIndex("OwnershipFormId");

                    b.HasIndex("PersonalityId");

                    b.HasIndex("SubjectOfEntrepreneurId");

                    b.HasIndex("TaxTreatmentId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.OrganizationOKED", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OkedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OkedId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationOKED");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.OutService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Error")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OutServices");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsResident")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MariageStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Spouse")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MariageStatusId");

                    b.HasIndex("PersonalityId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Personality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid?>("PhoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WorkExperienceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PhoneId");

                    b.HasIndex("RegionId");

                    b.HasIndex("WorkExperienceId");

                    b.ToTable("Personalities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.PersonalityDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("PersonalityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonalityId");

                    b.ToTable("PersonalityDocuments");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Phone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Home")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Work")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Provision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid?>("ProvisionDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProvisionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ProvisionDescriptionId");

                    b.HasIndex("ProvisionTypeId");

                    b.ToTable("Provisions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControls", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanHistoryStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanHistoryStatusId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleControls");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControlsButton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DialogMessageKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DialogMessageRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DialogTitleKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DialogTitleRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasForm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<Guid>("TaskStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleControlId");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("RoleControlsButtons");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControlsField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameKk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleControlId");

                    b.ToTable("RoleControlsFields");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControlsFieldValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleControlsFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("RoleControlsFieldId");

                    b.ToTable("RoleControlsFieldValues");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.SelectedAccessory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Count")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("TechModelId");

                    b.ToTable("SelectedAccessories");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.SelectedTechnic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Count")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractId")
                        .IsUnique();

                    b.HasIndex("CountryId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("TechModelId");

                    b.ToTable("SelectedTechnics");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.TechActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppActivesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Obremeneniya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhomAndWhyZalozheno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCorrectlyCount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppActivesId");

                    b.ToTable("TechActivity");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Audience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhysical")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasswordTryCount")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.WorkExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Agriculture")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Total")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.ExtraDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid?>("VatCertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("VatCertificateId");

                    b.ToTable("LoanApplicationExtraDetails");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.FlOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("ExtraDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExtraDetailsId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonId");

                    b.ToTable("FlOwners");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.License", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Essence")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<Guid>("ExtraDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ExtraDetailsId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.UlOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("ExtraDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExtraDetailsId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OrganizationId");

                    b.ToTable("UlOwners");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Dictionaries.DicProvisionDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicProvisionDescription");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03723eeb-7807-44a8-92b4-ebe52825b652"),
                            Code = "0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Не указано",
                            Sort = 0
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Dictionaries.DicProvisionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicProvisionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fc3a266-5e33-4138-9284-c47e05696cb3"),
                            Code = "Pledge",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "",
                            NameRu = "Залог",
                            Sort = 0,
                            Value = 1
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Dictionaries.DicVerificationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("NameKk")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DicVerificationStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9147caff-1fd0-4fb2-9216-1d4d354cd9a0"),
                            Code = "0",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Қызмет қол жетімді емес",
                            NameRu = "Сервис не доступен",
                            Sort = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5c792135-6524-4a12-bf48-dea59580f552"),
                            Code = "1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Тексеруден өтті",
                            NameRu = "Проверка пройдена",
                            Sort = 0,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9be3e547-c44e-418e-a9c7-6acfba833f71"),
                            Code = "2",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жөнделетін",
                            NameRu = "Устраняемый",
                            Sort = 0,
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("c60a9da0-816b-46e6-84a1-a3d4188a1e4a"),
                            Code = "3",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameKk = "Жөнделмейтін",
                            NameRu = "Не устраняемый",
                            Sort = 0,
                            Status = 3
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.FinAnalysis.AffiliationPersonality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AffiliationPersonalities");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.FinAnalysis.SpecialRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("SpecialRelations");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Identity.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RegionId");

                    b.HasIndex("UserId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Identity.UserBranch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("UserBranches");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.System.EntityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("EntityTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c32c956-310f-4acf-9316-788e3d002d6e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Заявка",
                            EntityTypeId = 1,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "LoanApplication"
                        },
                        new
                        {
                            Id = new Guid("99a11953-e980-4839-871c-e88659401ac6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Задачи по заявке",
                            EntityTypeId = 2,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "LoanApplicationTask"
                        },
                        new
                        {
                            Id = new Guid("71f8ffc5-8f64-41df-9004-41529398de84"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Файл из интеграции с PKB",
                            EntityTypeId = 3,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "PKB"
                        },
                        new
                        {
                            Id = new Guid("83697c38-a05b-4a62-bb6d-17e1c51295b9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Файл замечания",
                            EntityTypeId = 4,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "Comment"
                        },
                        new
                        {
                            Id = new Guid("87301b5b-c361-4fe4-8a9f-5aa2e30ae24e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Файл из интеграции с GKB",
                            EntityTypeId = 5,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "GKB"
                        },
                        new
                        {
                            Id = new Guid("70c12155-26c0-41b2-b437-0a2ab751426e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Личные данные",
                            EntityTypeId = 6,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "Personality"
                        },
                        new
                        {
                            Id = new Guid("4b5b026a-72b9-4ffb-b398-4d6c85181549"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Фото пользователя",
                            EntityTypeId = 7,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SystemName = "UserImage"
                        });
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.System.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(100);

                    b.Property<Guid>("EntityTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(100);

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.AffiliatedCompanies", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.ClientDetails", "ClientDetails")
                        .WithMany("AffiliatedCompanieses")
                        .HasForeignKey("ClientDetailsId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.AppActives", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany("Actives")
                        .HasForeignKey("LoanApplicationId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.AppTechnics", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany("AppTechnics")
                        .HasForeignKey("LoanApplicationId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.BankAccount", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany("BankAccounts")
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.BioActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.AppActives", "appActives")
                        .WithMany("BioActivities")
                        .HasForeignKey("AppActivesId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Branch", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Branch", "ParentBranch")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Calculator", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Contract", "Contract")
                        .WithOne("Calculator")
                        .HasForeignKey("Agro.Shared.Data.Context.Calculator", "ContractId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ClientCredits", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.ClientDetails", "ClientDetails")
                        .WithMany("ClientCreditses")
                        .HasForeignKey("ClientDetailsId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ClientDetails", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany("ClientDetails")
                        .HasForeignKey("LoanApplicationId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ClientProfile", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientType", "DicClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId");

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Comment", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.RoleControlsField", "RoleControlsField")
                        .WithMany()
                        .HasForeignKey("RoleControlsFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Contract", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.AppTechnics", "AppTechnics")
                        .WithMany("Contracts")
                        .HasForeignKey("AppTechnicsId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.CreditCommitteeResult", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.CreditHistory", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany("CreditHistory")
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dept", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany("Depts")
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAccessories", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechType", "DicTechType")
                        .WithMany("DicAccessorieses")
                        .HasForeignKey("DicTechTypeId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicAffiliationRelationship", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicAffiliation", "Affiliation")
                        .WithMany("DicAffiliationRelationships")
                        .HasForeignKey("AffiliationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicAffiliationType", "AffiliationType")
                        .WithMany("DicAffiliationRelationships")
                        .HasForeignKey("AffiliationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicClassificationSubtitle", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicDocClassification", "DocClassification")
                        .WithMany()
                        .HasForeignKey("DocClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCountryProvider", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicCountry", "DicCountry")
                        .WithMany("DicCountryProviders")
                        .HasForeignKey("DicCountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicProvider", "DicProvider")
                        .WithMany("DicCountryProviders")
                        .HasForeignKey("DicProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechModel", "DicTechModel")
                        .WithMany("DicCountryProviders")
                        .HasForeignKey("DicTechModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicCountryTechModel", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicCountry", "DicCountry")
                        .WithMany("DicCountryTechModels")
                        .HasForeignKey("DicCountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechModel", "DicTechModel")
                        .WithMany("DicCountryTechModels")
                        .HasForeignKey("DicTechModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicKato", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicKato", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanType", "DicLoanType")
                        .WithMany("LoanProducts")
                        .HasForeignKey("DicLoanTypeId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicNok", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTechModel", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechProduct", "DicTechProduct")
                        .WithMany("DicTechModels")
                        .HasForeignKey("DicTechProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTechProduct", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicAccessories", "DicAccessories")
                        .WithMany()
                        .HasForeignKey("DicAccessoriesId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechType", "DicTechType")
                        .WithMany()
                        .HasForeignKey("DicTechTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicTechType", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany("TechTypes")
                        .HasForeignKey("DicLoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechType", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Dictionary.DicWarningClassification", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClassificationSubtitle", "ClassificationSubtitle")
                        .WithMany()
                        .HasForeignKey("ClassificationSubtitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Document", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicDocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.ExpertiseResult", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicDecision", "DicDecision")
                        .WithMany()
                        .HasForeignKey("DecisionId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanHistoryStatus", "DicLoanHistoryStatus")
                        .WithMany()
                        .HasForeignKey("ExpertiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysis", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicAffiliation", "DicAffiliation")
                        .WithMany()
                        .HasForeignKey("AffiliationId");

                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysisIncome", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.FinAnalysis", "FinAnalysis")
                        .WithMany("FinAnalysisIncomes")
                        .HasForeignKey("FinAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysisLoanPayment", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.FinAnalysis", "FinAnalysis")
                        .WithMany("FinAnalysisLoanPayments")
                        .HasForeignKey("FinAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FinAnalysisQueueTask", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FloraActivities", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.AppActives", "appActives")
                        .WithMany("FloraActivities")
                        .HasForeignKey("AppActivesId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.FloraCulture", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicRegion", "DicRegion")
                        .WithMany()
                        .HasForeignKey("DicRegionId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.JuristResult", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicWarningClassification", "WarningClassification")
                        .WithMany()
                        .HasForeignKey("WarningClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LandActivities", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.AppActives", "appActives")
                        .WithMany("LandActivities")
                        .HasForeignKey("AppActivesId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplication", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicBank", "DicBank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("Agro.Shared.Data.Context.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientSegment", "DicClientSegment")
                        .WithMany()
                        .HasForeignKey("ClientSegmentId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanType", "DicLoanType")
                        .WithMany()
                        .HasForeignKey("DicLoanTypeId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProducts")
                        .WithMany("LoanApplications")
                        .HasForeignKey("LoanProductId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanHistoryStatus", "DicLoanHistoryStatus")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplicationHistory", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicDecision", "DicDecision")
                        .WithMany()
                        .HasForeignKey("DecisionId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanHistoryStatus", "DicLoanHistoryStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplicationTask", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationTasks")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicDecision", "DicDecision")
                        .WithMany()
                        .HasForeignKey("DecisionId");

                    b.HasOne("Agro.Shared.Data.Context.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanHistoryStatus", "DicLoanHistoryStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTaskStatus", "DicTaskStatus")
                        .WithMany()
                        .HasForeignKey("TaskStatusId");

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.Activity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany("Activities")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.FloraActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplications.Activity.Activity", "Activity")
                        .WithMany("FloraActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.FloraCulture", "FloraCulture")
                        .WithMany()
                        .HasForeignKey("FloraCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.FloraProductivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplications.Activity.FloraActivity", "FloraActivity")
                        .WithMany("Productivities")
                        .HasForeignKey("FloraActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.LandActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplications.Activity.Activity", "Activity")
                        .WithMany("LandActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLandType", "DicLandType")
                        .WithMany()
                        .HasForeignKey("LandTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicOwnershipType", "DicOwnershipType")
                        .WithMany()
                        .HasForeignKey("OwnershipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.LivestockActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplications.Activity.Activity", "Activity")
                        .WithMany("LivestockActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLivestockType", "DicLivestockType")
                        .WithMany()
                        .HasForeignKey("LivestockTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Activity.TechnicActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplications.Activity.Activity", "Activity")
                        .WithMany("TechnicActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.Details", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany("ClientDetailsNew")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanApplications.DetailsPersonality", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplications.Details", "Details")
                        .WithMany("DetailsPersonalities")
                        .HasForeignKey("DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany()
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanGracePeriodCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanPurpose", "DicLoanPurpose")
                        .WithMany()
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMaxAmountCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientLocationType", "DicClientLocationType")
                        .WithMany()
                        .HasForeignKey("ClientLocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanMinAmountCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.LoanProductActivity", "LoanProductActivity")
                        .WithMany()
                        .HasForeignKey("LoanProductActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanProductActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicActivityType", "DicActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRateCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientSegment", "DicClientSegment")
                        .WithMany()
                        .HasForeignKey("ClientSegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyFee", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanRepaymentType", "DicLoanRepaymentTypeFee")
                        .WithMany()
                        .HasForeignKey("RepaymentTypeFeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanRepaymentFrequencyOD", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanRepaymentType", "DicLoanRepaymentTypeOD")
                        .WithMany()
                        .HasForeignKey("RepaymentTypeODId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.LoanTermCondition", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicClientType", "DicClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanFinancingSource", "DicLoanFinancingSource")
                        .WithMany()
                        .HasForeignKey("FinancingSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanProduct", "DicLoanProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanPurpose", "DicLoanPurpose")
                        .WithMany()
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Organization", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicOrganizationAndLegalForm", "DicOrganizationAndLegalForm")
                        .WithMany()
                        .HasForeignKey("LegalFormId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicOrganizationType", "DicOrganizationType")
                        .WithMany()
                        .HasForeignKey("OrganizationTypeId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicOwnershipForm", "DicOwnershipForm")
                        .WithMany()
                        .HasForeignKey("OwnershipFormId");

                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany()
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicSubjectOfEntrepreneur", "DicSubjectOfEntrepreneur")
                        .WithMany()
                        .HasForeignKey("SubjectOfEntrepreneurId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTaxTreatment", "DicTaxTreatment")
                        .WithMany()
                        .HasForeignKey("TaxTreatmentId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.OrganizationOKED", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicOKED", "DicOKED")
                        .WithMany()
                        .HasForeignKey("OkedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Organization", "Organization")
                        .WithMany("OKED")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Person", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicCountry", "DicCountry")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicMariageStatus", "DicMariageStatus")
                        .WithMany()
                        .HasForeignKey("MariageStatusId");

                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany()
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Personality", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Agro.Shared.Data.Context.Phone", "Phone")
                        .WithMany()
                        .HasForeignKey("PhoneId");

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicRegion", "DicRegion")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("Agro.Shared.Data.Context.WorkExperience", "WorkExperience")
                        .WithMany()
                        .HasForeignKey("WorkExperienceId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.PersonalityDocument", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Personality", "Personality")
                        .WithMany("Documents")
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.Provision", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Contract", "Contract")
                        .WithMany("Provisions")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Entities.Dictionaries.DicProvisionDescription", "ProvisionDescription")
                        .WithMany()
                        .HasForeignKey("ProvisionDescriptionId");

                    b.HasOne("Agro.Shared.Data.Entities.Dictionaries.DicProvisionType", "ProvisionType")
                        .WithMany()
                        .HasForeignKey("ProvisionTypeId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControls", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicLoanHistoryStatus", "LoanHistoryStatus")
                        .WithMany()
                        .HasForeignKey("LoanHistoryStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControlsButton", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.RoleControls", "RoleControls")
                        .WithMany()
                        .HasForeignKey("RoleControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTaskStatus", "TaskStatus")
                        .WithMany()
                        .HasForeignKey("TaskStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControlsField", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.RoleControls", "RoleControls")
                        .WithMany()
                        .HasForeignKey("RoleControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.RoleControlsFieldValue", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.RoleControlsField", "RoleControlsField")
                        .WithMany()
                        .HasForeignKey("RoleControlsFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.SelectedAccessory", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Contract", "Contract")
                        .WithMany("SelectedAccessories")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicCountry", "DicCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicProvider", "DicProvider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechModel", "DicTechModel")
                        .WithMany()
                        .HasForeignKey("TechModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.SelectedTechnic", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Contract", "Contract")
                        .WithOne("SelectedTechnic")
                        .HasForeignKey("Agro.Shared.Data.Context.SelectedTechnic", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicCountry", "DicCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicProvider", "DicProvider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicTechModel", "DicTechModel")
                        .WithMany()
                        .HasForeignKey("TechModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.TechActivity", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.AppActives", "appActives")
                        .WithMany("TechActivities")
                        .HasForeignKey("AppActivesId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Context.UserRole", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.ExtraDetails", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Document", "VatCertificate")
                        .WithMany()
                        .HasForeignKey("VatCertificateId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.FlOwner", b =>
                {
                    b.HasOne("Agro.Shared.Data.Entities.ClientExtraDetails.ExtraDetails", "ExtraDetails")
                        .WithMany()
                        .HasForeignKey("ExtraDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.License", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Entities.ClientExtraDetails.ExtraDetails", "ExtraDetails")
                        .WithMany()
                        .HasForeignKey("ExtraDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.ClientExtraDetails.UlOwner", b =>
                {
                    b.HasOne("Agro.Shared.Data.Entities.ClientExtraDetails.ExtraDetails", "ExtraDetails")
                        .WithMany()
                        .HasForeignKey("ExtraDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Identity.Position", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Dictionary.DicRegion", "Region")
                        .WithMany("Positions")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany("Positions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Agro.Shared.Data.Entities.Identity.UserBranch", b =>
                {
                    b.HasOne("Agro.Shared.Data.Context.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Agro.Shared.Data.Context.User", "User")
                        .WithMany("Branches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
